// .0fake
enum {
	MQ_BUTCHER = 1,
	MQ_GARBUD = 2,
	MQ_ZHAR = 4,
	MQ_LTBANNER = 8,
	MQ_VEIL = 16,
	MQ_WARLORD = 32,
	MQ_SKELKING = 64,
	MQ_DIABLO = 128,
	MQ_BETRAYER = 256,
	MQ_SCHAMB = 512,
	MQ_ANVIL = 1024,
	MQ_PWATER = 2048,
	MQ_BLOOD = 4096,
};

// .100fake
enum {
	GAMEPAD_RUNNING = 0,
	GAMEPAD_TOGGLEPAUSE = 1,
	GAMEPAD_STOP_PLAYERS = 2,
	GAMEPAD_STOP_PLAYER1 = 3,
	GAMEPAD_STOP_PLAYER2 = 4,
	GAMEPAD_START_PLAYERS = 5,
	GAMEPAD_START_PLAYER1 = 6,
	GAMEPAD_START_PLAYER2 = 7,
	GAMEPAD_SET_FUNCTION = 8,
	GAMEPAD_SETALL_FUNCTIONS = 9,
	GAMEPAD_SET_UPFUNCTION = 10,
	GAMEPAD_GETALL_FUNCTIONS = 11,
	GAMEPAD_GETWALK = 12,
};

// .130fake
enum {
	CUTTT_SCREEN = 0,
	CUTL1D_SCREEN = 1,
	CUT2_SCREEN = 2,
	CUT3_SCREEN = 3,
	CUT4_SCREEN = 4,
	CUTPORTL_SCREEN = 5,
	CUTPORTR_SCREEN = 6,
	CUTSTART_SCREEN = 7,
	CUTGATE_SCREEN = 8,
	PANDB_SCREEN = 9,
	CUTBEGIN_SCREEN = 10,
	CUTLOAD_SCREEN = 11,
};

// .135fake
enum {
	PS_WALK1 = 0,
	PS_WALK2 = 1,
	PS_WALK3 = 2,
	PS_WALK4 = 3,
	PS_BFIRE = 4,
	PS_FMAG = 5,
	PS_TMAG = 6,
	PS_LGHIT = 7,
	PS_LGHIT1 = 8,
	PS_SWING = 9,
	PS_SWING2 = 10,
	PS_DEAD = 11,
	IS_QUESTDN = 12,
	IS_ARMRFKD = 13,
	IS_BARLFIRE = 14,
	IS_BARREL = 15,
	IS_BHIT = 16,
	IS_BHIT1 = 17,
	IS_CHEST = 18,
	IS_DOORCLOS = 19,
	IS_DOOROPEN = 20,
	IS_FLIP = 21,
	IS_GOLD = 22,
	IS_HLMTFKD = 23,
	IS_IANVL = 24,
	IS_IAXE = 25,
	IS_IBLST = 26,
	IS_IBODY = 27,
	IS_IBOOK = 28,
	IS_IBOW = 29,
	IS_ICAP = 30,
	IS_IGRAB = 31,
	IS_IHARM = 32,
	IS_ILARM = 33,
	IS_IMUSH = 34,
	IS_IPOT = 35,
	IS_IRING = 36,
	IS_IROCK = 37,
	IS_ISCROL = 38,
	IS_ISHIEL = 39,
	IS_ISIGN = 40,
	IS_ISTAF = 41,
	IS_ISWORD = 42,
	IS_LEVER = 43,
	IS_MAGIC = 44,
	IS_MAGIC1 = 45,
	IS_RBOOK = 46,
	IS_SARC = 47,
	IS_SHLDFKD = 48,
	IS_SWRDFKD = 49,
	IS_TITLEMOV = 50,
	IS_TITLSLCT = 51,
	SFX_SILENCE = 52,
	IS_TRAP = 53,
	IS_CAST1 = 54,
	IS_CAST10 = 55,
	IS_CAST12 = 56,
	IS_CAST2 = 57,
	IS_CAST3 = 58,
	IS_CAST4 = 59,
	IS_CAST5 = 60,
	IS_CAST6 = 61,
	IS_CAST7 = 62,
	IS_CAST8 = 63,
	IS_CAST9 = 64,
	LS_HEALING = 65,
	IS_REPAIR = 66,
	LS_ACID = 67,
	LS_ACIDS = 68,
	LS_APOC = 69,
	LS_ARROWALL = 70,
	LS_BLODBOIL = 71,
	LS_BLODSTAR = 72,
	LS_BLSIMPT = 73,
	LS_BONESP = 74,
	LS_BSIMPCT = 75,
	LS_CALDRON = 76,
	LS_CBOLT = 77,
	LS_CHLTNING = 78,
	LS_DSERP = 79,
	LS_ELECIMP1 = 80,
	LS_ELEMENTL = 81,
	LS_ETHEREAL = 82,
	LS_FBALL = 83,
	LS_FBOLT1 = 84,
	LS_FBOLT2 = 85,
	LS_FIRIMP1 = 86,
	LS_FIRIMP2 = 87,
	LS_FLAMWAVE = 88,
	LS_FLASH = 89,
	LS_FOUNTAIN = 90,
	LS_GOLUM = 91,
	LS_GOLUMDED = 92,
	LS_GSHRINE = 93,
	LS_GUARD = 94,
	LS_GUARDLAN = 95,
	LS_HOLYBOLT = 96,
	LS_HYPER = 97,
	LS_INFRAVIS = 98,
	LS_INVISIBL = 99,
	LS_INVPOT = 100,
	LS_LNING1 = 101,
	LS_LTNING = 102,
	LS_MSHIELD = 103,
	LS_NOVA = 104,
	LS_PORTAL = 105,
	LS_PUDDLE = 106,
	LS_RESUR = 107,
	LS_SCURSE = 108,
	LS_SCURIMP = 109,
	LS_SENTINEL = 110,
	LS_SHATTER = 111,
	LS_SOULFIRE = 112,
	LS_SPOUTLOP = 113,
	LS_SPOUTSTR = 114,
	LS_STORM = 115,
	LS_TRAPDIS = 116,
	LS_TELEPORT = 117,
	LS_VTHEFT = 118,
	LS_WALLLOOP = 119,
	LS_WALLSTRT = 120,
	TSFX_BMAID1 = 121,
	TSFX_BMAID2 = 122,
	TSFX_BMAID3 = 123,
	TSFX_BMAID4 = 124,
	TSFX_BMAID5 = 125,
	TSFX_BMAID6 = 126,
	TSFX_BMAID7 = 127,
	TSFX_BMAID8 = 128,
	TSFX_BMAID9 = 129,
	TSFX_BMAID10 = 130,
	TSFX_BMAID11 = 131,
	TSFX_BMAID12 = 132,
	TSFX_BMAID13 = 133,
	TSFX_BMAID14 = 134,
	TSFX_BMAID15 = 135,
	TSFX_BMAID16 = 136,
	TSFX_BMAID17 = 137,
	TSFX_BMAID18 = 138,
	TSFX_BMAID19 = 139,
	TSFX_BMAID20 = 140,
	TSFX_BMAID21 = 141,
	TSFX_BMAID22 = 142,
	TSFX_BMAID23 = 143,
	TSFX_BMAID24 = 144,
	TSFX_BMAID25 = 145,
	TSFX_BMAID26 = 146,
	TSFX_BMAID27 = 147,
	TSFX_BMAID28 = 148,
	TSFX_BMAID29 = 149,
	TSFX_BMAID30 = 150,
	TSFX_BMAID31 = 151,
	TSFX_BMAID32 = 152,
	TSFX_BMAID33 = 153,
	TSFX_BMAID34 = 154,
	TSFX_BMAID35 = 155,
	TSFX_BMAID36 = 156,
	TSFX_BMAID37 = 157,
	TSFX_BMAID38 = 158,
	TSFX_BMAID39 = 159,
	TSFX_BMAID40 = 160,
	TSFX_SMITH1 = 161,
	TSFX_SMITH2 = 162,
	TSFX_SMITH3 = 163,
	TSFX_SMITH4 = 164,
	TSFX_SMITH5 = 165,
	TSFX_SMITH6 = 166,
	TSFX_SMITH7 = 167,
	TSFX_SMITH8 = 168,
	TSFX_SMITH9 = 169,
	TSFX_SMITH10 = 170,
	TSFX_SMITH11 = 171,
	TSFX_SMITH12 = 172,
	TSFX_SMITH13 = 173,
	TSFX_SMITH14 = 174,
	TSFX_SMITH15 = 175,
	TSFX_SMITH16 = 176,
	TSFX_SMITH17 = 177,
	TSFX_SMITH18 = 178,
	TSFX_SMITH19 = 179,
	TSFX_SMITH20 = 180,
	TSFX_SMITH21 = 181,
	TSFX_SMITH22 = 182,
	TSFX_SMITH23 = 183,
	TSFX_SMITH24 = 184,
	TSFX_SMITH25 = 185,
	TSFX_SMITH26 = 186,
	TSFX_SMITH27 = 187,
	TSFX_SMITH28 = 188,
	TSFX_SMITH29 = 189,
	TSFX_SMITH30 = 190,
	TSFX_SMITH31 = 191,
	TSFX_SMITH32 = 192,
	TSFX_SMITH33 = 193,
	TSFX_SMITH34 = 194,
	TSFX_SMITH35 = 195,
	TSFX_SMITH36 = 196,
	TSFX_SMITH37 = 197,
	TSFX_SMITH38 = 198,
	TSFX_SMITH39 = 199,
	TSFX_SMITH40 = 200,
	TSFX_SMITH41 = 201,
	TSFX_SMITH42 = 202,
	TSFX_SMITH43 = 203,
	TSFX_SMITH44 = 204,
	TSFX_SMITH45 = 205,
	TSFX_SMITH46 = 206,
	TSFX_SMITH47 = 207,
	TSFX_SMITH48 = 208,
	TSFX_SMITH49 = 209,
	TSFX_SMITH50 = 210,
	TSFX_SMITH51 = 211,
	TSFX_SMITH52 = 212,
	TSFX_SMITH53 = 213,
	TSFX_SMITH54 = 214,
	TSFX_SMITH55 = 215,
	TSFX_SMITH56 = 216,
	TSFX_COW1 = 217,
	TSFX_COW2 = 218,
	TSFX_BATS = 219,
	TSFX_BIRDCHR1 = 220,
	TSFX_BIRDCHR2 = 221,
	TSFX_BIRDS1 = 222,
	TSFX_BIRDS2 = 223,
	TSFX_CRICKET1 = 224,
	TSFX_CRICKET2 = 225,
	TSFX_MICE = 226,
	TSFX_OWLECHO = 227,
	TSFX_STREAM = 228,
	TSFX_TAVERN = 229,
	TSFX_TREEBLOW = 230,
	TSFX_WINDBLOW = 231,
	TSFX_COW3 = 232,
	TSFX_COW4 = 233,
	TSFX_COW5 = 234,
	TSFX_COW6 = 235,
	TSFX_COW7 = 236,
	TSFX_COW8 = 237,
	TSFX_DEADGUY = 238,
	TSFX_DRUNK1 = 239,
	TSFX_DRUNK2 = 240,
	TSFX_DRUNK3 = 241,
	TSFX_DRUNK4 = 242,
	TSFX_DRUNK5 = 243,
	TSFX_DRUNK6 = 244,
	TSFX_DRUNK7 = 245,
	TSFX_DRUNK8 = 246,
	TSFX_DRUNK9 = 247,
	TSFX_DRUNK10 = 248,
	TSFX_DRUNK11 = 249,
	TSFX_DRUNK12 = 250,
	TSFX_DRUNK13 = 251,
	TSFX_DRUNK14 = 252,
	TSFX_DRUNK15 = 253,
	TSFX_DRUNK16 = 254,
	TSFX_DRUNK17 = 255,
	TSFX_DRUNK18 = 256,
	TSFX_DRUNK19 = 257,
	TSFX_DRUNK20 = 258,
	TSFX_DRUNK21 = 259,
	TSFX_DRUNK22 = 260,
	TSFX_DRUNK23 = 261,
	TSFX_DRUNK24 = 262,
	TSFX_DRUNK25 = 263,
	TSFX_DRUNK26 = 264,
	TSFX_DRUNK27 = 265,
	TSFX_DRUNK28 = 266,
	TSFX_DRUNK29 = 267,
	TSFX_DRUNK30 = 268,
	TSFX_DRUNK31 = 269,
	TSFX_DRUNK32 = 270,
	TSFX_DRUNK33 = 271,
	TSFX_DRUNK34 = 272,
	TSFX_DRUNK35 = 273,
	TSFX_HEALER1 = 274,
	TSFX_HEALER2 = 275,
	TSFX_HEALER3 = 276,
	TSFX_HEALER4 = 277,
	TSFX_HEALER5 = 278,
	TSFX_HEALER6 = 279,
	TSFX_HEALER7 = 280,
	TSFX_HEALER8 = 281,
	TSFX_HEALER9 = 282,
	TSFX_HEALER10 = 283,
	TSFX_HEALER11 = 284,
	TSFX_HEALER12 = 285,
	TSFX_HEALER13 = 286,
	TSFX_HEALER14 = 287,
	TSFX_HEALER15 = 288,
	TSFX_HEALER16 = 289,
	TSFX_HEALER17 = 290,
	TSFX_HEALER18 = 291,
	TSFX_HEALER19 = 292,
	TSFX_HEALER20 = 293,
	TSFX_HEALER21 = 294,
	TSFX_HEALER22 = 295,
	TSFX_HEALER23 = 296,
	TSFX_HEALER24 = 297,
	TSFX_HEALER25 = 298,
	TSFX_HEALER26 = 299,
	TSFX_HEALER27 = 300,
	TSFX_HEALER28 = 301,
	TSFX_HEALER29 = 302,
	TSFX_HEALER30 = 303,
	TSFX_HEALER31 = 304,
	TSFX_HEALER32 = 305,
	TSFX_HEALER33 = 306,
	TSFX_HEALER34 = 307,
	TSFX_HEALER35 = 308,
	TSFX_HEALER36 = 309,
	TSFX_HEALER37 = 310,
	TSFX_HEALER38 = 311,
	TSFX_HEALER39 = 312,
	TSFX_HEALER40 = 313,
	TSFX_HEALER41 = 314,
	TSFX_HEALER42 = 315,
	TSFX_HEALER43 = 316,
	TSFX_HEALER44 = 317,
	TSFX_HEALER45 = 318,
	TSFX_HEALER46 = 319,
	TSFX_HEALER47 = 320,
	TSFX_PEGBOY1 = 321,
	TSFX_PEGBOY2 = 322,
	TSFX_PEGBOY3 = 323,
	TSFX_PEGBOY4 = 324,
	TSFX_PEGBOY5 = 325,
	TSFX_PEGBOY6 = 326,
	TSFX_PEGBOY7 = 327,
	TSFX_PEGBOY8 = 328,
	TSFX_PEGBOY9 = 329,
	TSFX_PEGBOY10 = 330,
	TSFX_PEGBOY11 = 331,
	TSFX_PEGBOY12 = 332,
	TSFX_PEGBOY13 = 333,
	TSFX_PEGBOY14 = 334,
	TSFX_PEGBOY15 = 335,
	TSFX_PEGBOY16 = 336,
	TSFX_PEGBOY17 = 337,
	TSFX_PEGBOY18 = 338,
	TSFX_PEGBOY19 = 339,
	TSFX_PEGBOY20 = 340,
	TSFX_PEGBOY21 = 341,
	TSFX_PEGBOY22 = 342,
	TSFX_PEGBOY23 = 343,
	TSFX_PEGBOY24 = 344,
	TSFX_PEGBOY25 = 345,
	TSFX_PEGBOY26 = 346,
	TSFX_PEGBOY27 = 347,
	TSFX_PEGBOY28 = 348,
	TSFX_PEGBOY29 = 349,
	TSFX_PEGBOY30 = 350,
	TSFX_PEGBOY31 = 351,
	TSFX_PEGBOY32 = 352,
	TSFX_PEGBOY33 = 353,
	TSFX_PEGBOY34 = 354,
	TSFX_PEGBOY35 = 355,
	TSFX_PEGBOY36 = 356,
	TSFX_PEGBOY37 = 357,
	TSFX_PEGBOY38 = 358,
	TSFX_PEGBOY39 = 359,
	TSFX_PEGBOY40 = 360,
	TSFX_PEGBOY41 = 361,
	TSFX_PEGBOY42 = 362,
	TSFX_PEGBOY43 = 363,
	TSFX_PRIEST0 = 364,
	TSFX_PRIEST1 = 365,
	TSFX_PRIEST2 = 366,
	TSFX_PRIEST3 = 367,
	TSFX_PRIEST4 = 368,
	TSFX_PRIEST5 = 369,
	TSFX_PRIEST6 = 370,
	TSFX_PRIEST7 = 371,
	TSFX_STORY0 = 372,
	TSFX_STORY1 = 373,
	TSFX_STORY2 = 374,
	TSFX_STORY3 = 375,
	TSFX_STORY4 = 376,
	TSFX_STORY5 = 377,
	TSFX_STORY6 = 378,
	TSFX_STORY7 = 379,
	TSFX_STORY8 = 380,
	TSFX_STORY9 = 381,
	TSFX_STORY10 = 382,
	TSFX_STORY11 = 383,
	TSFX_STORY12 = 384,
	TSFX_STORY13 = 385,
	TSFX_STORY14 = 386,
	TSFX_STORY15 = 387,
	TSFX_STORY16 = 388,
	TSFX_STORY17 = 389,
	TSFX_STORY18 = 390,
	TSFX_STORY19 = 391,
	TSFX_STORY20 = 392,
	TSFX_STORY21 = 393,
	TSFX_STORY22 = 394,
	TSFX_STORY23 = 395,
	TSFX_STORY24 = 396,
	TSFX_STORY25 = 397,
	TSFX_STORY26 = 398,
	TSFX_STORY27 = 399,
	TSFX_STORY28 = 400,
	TSFX_STORY29 = 401,
	TSFX_STORY30 = 402,
	TSFX_STORY31 = 403,
	TSFX_STORY32 = 404,
	TSFX_STORY33 = 405,
	TSFX_STORY34 = 406,
	TSFX_STORY35 = 407,
	TSFX_STORY36 = 408,
	TSFX_STORY37 = 409,
	TSFX_STORY38 = 410,
	TSFX_TAVERN0 = 411,
	TSFX_TAVERN1 = 412,
	TSFX_TAVERN2 = 413,
	TSFX_TAVERN3 = 414,
	TSFX_TAVERN4 = 415,
	TSFX_TAVERN5 = 416,
	TSFX_TAVERN6 = 417,
	TSFX_TAVERN7 = 418,
	TSFX_TAVERN8 = 419,
	TSFX_TAVERN9 = 420,
	TSFX_TAVERN10 = 421,
	TSFX_TAVERN11 = 422,
	TSFX_TAVERN12 = 423,
	TSFX_TAVERN13 = 424,
	TSFX_TAVERN14 = 425,
	TSFX_TAVERN15 = 426,
	TSFX_TAVERN16 = 427,
	TSFX_TAVERN17 = 428,
	TSFX_TAVERN18 = 429,
	TSFX_TAVERN19 = 430,
	TSFX_TAVERN20 = 431,
	TSFX_TAVERN21 = 432,
	TSFX_TAVERN22 = 433,
	TSFX_TAVERN23 = 434,
	TSFX_TAVERN24 = 435,
	TSFX_TAVERN25 = 436,
	TSFX_TAVERN26 = 437,
	TSFX_TAVERN27 = 438,
	TSFX_TAVERN28 = 439,
	TSFX_TAVERN29 = 440,
	TSFX_TAVERN30 = 441,
	TSFX_TAVERN31 = 442,
	TSFX_TAVERN32 = 443,
	TSFX_TAVERN33 = 444,
	TSFX_TAVERN34 = 445,
	TSFX_TAVERN35 = 446,
	TSFX_TAVERN36 = 447,
	TSFX_TAVERN37 = 448,
	TSFX_TAVERN38 = 449,
	TSFX_TAVERN39 = 450,
	TSFX_TAVERN40 = 451,
	TSFX_TAVERN41 = 452,
	TSFX_TAVERN42 = 453,
	TSFX_TAVERN43 = 454,
	TSFX_TAVERN44 = 455,
	TSFX_TAVERN45 = 456,
	TSFX_WITCH1 = 457,
	TSFX_WITCH2 = 458,
	TSFX_WITCH3 = 459,
	TSFX_WITCH4 = 460,
	TSFX_WITCH5 = 461,
	TSFX_WITCH6 = 462,
	TSFX_WITCH7 = 463,
	TSFX_WITCH8 = 464,
	TSFX_WITCH9 = 465,
	TSFX_WITCH10 = 466,
	TSFX_WITCH11 = 467,
	TSFX_WITCH12 = 468,
	TSFX_WITCH13 = 469,
	TSFX_WITCH14 = 470,
	TSFX_WITCH15 = 471,
	TSFX_WITCH16 = 472,
	TSFX_WITCH17 = 473,
	TSFX_WITCH18 = 474,
	TSFX_WITCH19 = 475,
	TSFX_WITCH20 = 476,
	TSFX_WITCH21 = 477,
	TSFX_WITCH22 = 478,
	TSFX_WITCH23 = 479,
	TSFX_WITCH24 = 480,
	TSFX_WITCH25 = 481,
	TSFX_WITCH26 = 482,
	TSFX_WITCH27 = 483,
	TSFX_WITCH28 = 484,
	TSFX_WITCH29 = 485,
	TSFX_WITCH30 = 486,
	TSFX_WITCH31 = 487,
	TSFX_WITCH32 = 488,
	TSFX_WITCH33 = 489,
	TSFX_WITCH34 = 490,
	TSFX_WITCH35 = 491,
	TSFX_WITCH36 = 492,
	TSFX_WITCH37 = 493,
	TSFX_WITCH38 = 494,
	TSFX_WITCH39 = 495,
	TSFX_WITCH40 = 496,
	TSFX_WITCH41 = 497,
	TSFX_WITCH42 = 498,
	TSFX_WITCH43 = 499,
	TSFX_WITCH44 = 500,
	TSFX_WITCH45 = 501,
	TSFX_WITCH46 = 502,
	TSFX_WITCH47 = 503,
	TSFX_WITCH48 = 504,
	TSFX_WITCH49 = 505,
	TSFX_WITCH50 = 506,
	TSFX_WOUND = 507,
	PS_MAGE1 = 508,
	PS_MAGE2 = 509,
	PS_MAGE3 = 510,
	PS_MAGE4 = 511,
	PS_MAGE5 = 512,
	PS_MAGE6 = 513,
	PS_MAGE7 = 514,
	PS_MAGE8 = 515,
	PS_MAGE9 = 516,
	PS_MAGE10 = 517,
	PS_MAGE11 = 518,
	PS_MAGE12 = 519,
	PS_MAGE13 = 520,
	PS_MAGE14 = 521,
	PS_MAGE15 = 522,
	PS_MAGE16 = 523,
	PS_MAGE17 = 524,
	PS_MAGE18 = 525,
	PS_MAGE19 = 526,
	PS_MAGE20 = 527,
	PS_MAGE21 = 528,
	PS_MAGE22 = 529,
	PS_MAGE23 = 530,
	PS_MAGE24 = 531,
	PS_MAGE25 = 532,
	PS_MAGE26 = 533,
	PS_MAGE27 = 534,
	PS_MAGE28 = 535,
	PS_MAGE29 = 536,
	PS_MAGE30 = 537,
	PS_MAGE31 = 538,
	PS_MAGE32 = 539,
	PS_MAGE33 = 540,
	PS_MAGE34 = 541,
	PS_MAGE35 = 542,
	PS_MAGE36 = 543,
	PS_MAGE37 = 544,
	PS_MAGE38 = 545,
	PS_MAGE39 = 546,
	PS_MAGE40 = 547,
	PS_MAGE41 = 548,
	PS_MAGE42 = 549,
	PS_MAGE43 = 550,
	PS_MAGE44 = 551,
	PS_MAGE45 = 552,
	PS_MAGE46 = 553,
	PS_MAGE47 = 554,
	PS_MAGE48 = 555,
	PS_MAGE49 = 556,
	PS_MAGE50 = 557,
	PS_MAGE51 = 558,
	PS_MAGE52 = 559,
	PS_MAGE53 = 560,
	PS_MAGE54 = 561,
	PS_MAGE55 = 562,
	PS_MAGE56 = 563,
	PS_MAGE57 = 564,
	PS_MAGE58 = 565,
	PS_MAGE59 = 566,
	PS_MAGE60 = 567,
	PS_MAGE61 = 568,
	PS_MAGE62 = 569,
	PS_MAGE63 = 570,
	PS_MAGE64 = 571,
	PS_MAGE65 = 572,
	PS_MAGE66 = 573,
	PS_MAGE67 = 574,
	PS_MAGE68 = 575,
	PS_MAGE69 = 576,
	PS_MAGE69B = 577,
	PS_MAGE70 = 578,
	PS_MAGE71 = 579,
	PS_MAGE72 = 580,
	PS_MAGE73 = 581,
	PS_MAGE74 = 582,
	PS_MAGE75 = 583,
	PS_MAGE76 = 584,
	PS_MAGE77 = 585,
	PS_MAGE78 = 586,
	PS_MAGE79 = 587,
	PS_MAGE80 = 588,
	PS_MAGE81 = 589,
	PS_MAGE82 = 590,
	PS_MAGE83 = 591,
	PS_MAGE84 = 592,
	PS_MAGE85 = 593,
	PS_MAGE86 = 594,
	PS_MAGE87 = 595,
	PS_MAGE88 = 596,
	PS_MAGE89 = 597,
	PS_MAGE90 = 598,
	PS_MAGE91 = 599,
	PS_MAGE92 = 600,
	PS_MAGE93 = 601,
	PS_MAGE94 = 602,
	PS_MAGE95 = 603,
	PS_MAGE96 = 604,
	PS_MAGE97 = 605,
	PS_MAGE98 = 606,
	PS_MAGE99 = 607,
	PS_MAGE100 = 608,
	PS_MAGE101 = 609,
	PS_MAGE102 = 610,
	PS_SDEATH = 611,
	PS_ROGUE1 = 612,
	PS_ROGUE2 = 613,
	PS_ROGUE3 = 614,
	PS_ROGUE4 = 615,
	PS_ROGUE5 = 616,
	PS_ROGUE6 = 617,
	PS_ROGUE7 = 618,
	PS_ROGUE8 = 619,
	PS_ROGUE9 = 620,
	PS_ROGUE10 = 621,
	PS_ROGUE11 = 622,
	PS_ROGUE12 = 623,
	PS_ROGUE13 = 624,
	PS_ROGUE14 = 625,
	PS_ROGUE15 = 626,
	PS_ROGUE16 = 627,
	PS_ROGUE17 = 628,
	PS_ROGUE18 = 629,
	PS_ROGUE19 = 630,
	PS_ROGUE20 = 631,
	PS_ROGUE21 = 632,
	PS_ROGUE22 = 633,
	PS_ROGUE23 = 634,
	PS_ROGUE24 = 635,
	PS_ROGUE25 = 636,
	PS_ROGUE26 = 637,
	PS_ROGUE27 = 638,
	PS_ROGUE28 = 639,
	PS_ROGUE29 = 640,
	PS_ROGUE30 = 641,
	PS_ROGUE31 = 642,
	PS_ROGUE32 = 643,
	PS_ROGUE33 = 644,
	PS_ROGUE34 = 645,
	PS_ROGUE35 = 646,
	PS_ROGUE36 = 647,
	PS_ROGUE37 = 648,
	PS_ROGUE38 = 649,
	PS_ROGUE39 = 650,
	PS_ROGUE40 = 651,
	PS_ROGUE41 = 652,
	PS_ROGUE42 = 653,
	PS_ROGUE43 = 654,
	PS_ROGUE44 = 655,
	PS_ROGUE45 = 656,
	PS_ROGUE46 = 657,
	PS_ROGUE47 = 658,
	PS_ROGUE48 = 659,
	PS_ROGUE49 = 660,
	PS_ROGUE50 = 661,
	PS_ROGUE51 = 662,
	PS_ROGUE52 = 663,
	PS_ROGUE53 = 664,
	PS_ROGUE54 = 665,
	PS_ROGUE55 = 666,
	PS_ROGUE56 = 667,
	PS_ROGUE57 = 668,
	PS_ROGUE58 = 669,
	PS_ROGUE59 = 670,
	PS_ROGUE60 = 671,
	PS_ROGUE61 = 672,
	PS_ROGUE62 = 673,
	PS_ROGUE63 = 674,
	PS_ROGUE64 = 675,
	PS_ROGUE65 = 676,
	PS_ROGUE66 = 677,
	PS_ROGUE67 = 678,
	PS_ROGUE68 = 679,
	PS_ROGUE69 = 680,
	PS_ROGUE69B = 681,
	PS_ROGUE70 = 682,
	PS_ROGUE71 = 683,
	PS_ROGUE72 = 684,
	PS_ROGUE73 = 685,
	PS_ROGUE74 = 686,
	PS_ROGUE75 = 687,
	PS_ROGUE76 = 688,
	PS_ROGUE77 = 689,
	PS_ROGUE78 = 690,
	PS_ROGUE79 = 691,
	PS_ROGUE80 = 692,
	PS_ROGUE81 = 693,
	PS_ROGUE82 = 694,
	PS_ROGUE83 = 695,
	PS_ROGUE84 = 696,
	PS_ROGUE85 = 697,
	PS_ROGUE86 = 698,
	PS_ROGUE87 = 699,
	PS_ROGUE88 = 700,
	PS_ROGUE89 = 701,
	PS_ROGUE90 = 702,
	PS_ROGUE91 = 703,
	PS_ROGUE92 = 704,
	PS_ROGUE93 = 705,
	PS_ROGUE94 = 706,
	PS_ROGUE95 = 707,
	PS_ROGUE96 = 708,
	PS_ROGUE97 = 709,
	PS_ROGUE98 = 710,
	PS_ROGUE99 = 711,
	PS_ROGUE100 = 712,
	PS_ROGUE101 = 713,
	PS_ROGUE102 = 714,
	PS_RDEATH = 715,
	PS_WARR1 = 716,
	PS_WARR2 = 717,
	PS_WARR3 = 718,
	PS_WARR4 = 719,
	PS_WARR5 = 720,
	PS_WARR6 = 721,
	PS_WARR7 = 722,
	PS_WARR8 = 723,
	PS_WARR9 = 724,
	PS_WARR10 = 725,
	PS_WARR11 = 726,
	PS_WARR12 = 727,
	PS_WARR13 = 728,
	PS_WARR14 = 729,
	PS_WARR14B = 730,
	PS_WARR14C = 731,
	PS_WARR15 = 732,
	PS_WARR15B = 733,
	PS_WARR15C = 734,
	PS_WARR16 = 735,
	PS_WARR16B = 736,
	PS_WARR16C = 737,
	PS_WARR17 = 738,
	PS_WARR18 = 739,
	PS_WARR19 = 740,
	PS_WARR20 = 741,
	PS_WARR21 = 742,
	PS_WARR22 = 743,
	PS_WARR23 = 744,
	PS_WARR24 = 745,
	PS_WARR25 = 746,
	PS_WARR26 = 747,
	PS_WARR27 = 748,
	PS_WARR28 = 749,
	PS_WARR29 = 750,
	PS_WARR30 = 751,
	PS_WARR31 = 752,
	PS_WARR32 = 753,
	PS_WARR33 = 754,
	PS_WARR34 = 755,
	PS_WARR35 = 756,
	PS_WARR36 = 757,
	PS_WARR37 = 758,
	PS_WARR38 = 759,
	PS_WARR39 = 760,
	PS_WARR40 = 761,
	PS_WARR41 = 762,
	PS_WARR42 = 763,
	PS_WARR43 = 764,
	PS_WARR44 = 765,
	PS_WARR45 = 766,
	PS_WARR46 = 767,
	PS_WARR47 = 768,
	PS_WARR48 = 769,
	PS_WARR49 = 770,
	PS_WARR50 = 771,
	PS_WARR51 = 772,
	PS_WARR52 = 773,
	PS_WARR53 = 774,
	PS_WARR54 = 775,
	PS_WARR55 = 776,
	PS_WARR56 = 777,
	PS_WARR57 = 778,
	PS_WARR58 = 779,
	PS_WARR59 = 780,
	PS_WARR60 = 781,
	PS_WARR61 = 782,
	PS_WARR62 = 783,
	PS_WARR63 = 784,
	PS_WARR64 = 785,
	PS_WARR65 = 786,
	PS_WARR66 = 787,
	PS_WARR67 = 788,
	PS_WARR68 = 789,
	PS_WARR69 = 790,
	PS_WARR69B = 791,
	PS_WARR70 = 792,
	PS_WARR71 = 793,
	PS_WARR72 = 794,
	PS_WARR73 = 795,
	PS_WARR74 = 796,
	PS_WARR75 = 797,
	PS_WARR76 = 798,
	PS_WARR77 = 799,
	PS_WARR78 = 800,
	PS_WARR79 = 801,
	PS_WARR80 = 802,
	PS_WARR81 = 803,
	PS_WARR82 = 804,
	PS_WARR83 = 805,
	PS_WARR84 = 806,
	PS_WARR85 = 807,
	PS_WARR86 = 808,
	PS_WARR87 = 809,
	PS_WARR88 = 810,
	PS_WARR89 = 811,
	PS_WARR90 = 812,
	PS_WARR91 = 813,
	PS_WARR92 = 814,
	PS_WARR93 = 815,
	PS_WARR94 = 816,
	PS_WARR95 = 817,
	PS_WARR95B = 818,
	PS_WARR95C = 819,
	PS_WARR95D = 820,
	PS_WARR95E = 821,
	PS_WARR95F = 822,
	PS_WARR96B = 823,
	PS_WARR97 = 824,
	PS_WARR98 = 825,
	PS_WARR99 = 826,
	PS_WARR100 = 827,
	PS_WARR101 = 828,
	PS_WARR102 = 829,
	PS_WDEATH = 830,
	PS_NAR1 = 831,
	PS_NAR2 = 832,
	PS_NAR3 = 833,
	PS_NAR4 = 834,
	PS_NAR5 = 835,
	PS_NAR6 = 836,
	PS_NAR7 = 837,
	PS_NAR8 = 838,
	PS_NAR9 = 839,
	PS_DIABLVLINT = 840,
	USFX_CLEAVER = 841,
	USFX_GARBUD1 = 842,
	USFX_GARBUD2 = 843,
	USFX_GARBUD3 = 844,
	USFX_GARBUD4 = 845,
	USFX_IZUAL1 = 846,
	USFX_LACH1 = 847,
	USFX_LACH2 = 848,
	USFX_LACH3 = 849,
	USFX_LAZ1 = 850,
	USFX_LAZ2 = 851,
	USFX_SKING1 = 852,
	USFX_SNOT1 = 853,
	USFX_SNOT2 = 854,
	USFX_SNOT3 = 855,
	USFX_WARLRD1 = 856,
	USFX_WLOCK1 = 857,
	USFX_ZHAR1 = 858,
	USFX_ZHAR2 = 859,
	USFX_DIABLOD = 860,
	MSFX_ZOMBIEA = 861,
	MSFX_ZOMBIEH = 862,
	MSFX_ZOMBIED = 863,
	MSFX_ZOMBIES = 864,
	MSFX_PHALLA = 865,
	MSFX_PHALLH = 866,
	MSFX_PHALLD = 867,
	MSFX_PHALLS = 868,
	MSFX_SKLAXA = 869,
	MSFX_SKLAXH = 870,
	MSFX_SKLAXD = 871,
	MSFX_SKLAXS = 872,
	MSFX_SCAVA = 873,
	MSFX_SCAVH = 874,
	MSFX_SCAVD = 875,
	MSFX_SCAVS = 876,
	MSFX_SKLBWA = 877,
	MSFX_SKLBWH = 878,
	MSFX_SKLBWD = 879,
	MSFX_SKLBWS = 880,
	MSFX_SNEAKLA = 881,
	MSFX_SNEAKLH = 882,
	MSFX_SNEAKLD = 883,
	MSFX_SNEAKLS = 884,
	MSFX_SNEAKA = 885,
	MSFX_SNEAKH = 886,
	MSFX_SNEAKD = 887,
	MSFX_SNEAKS = 888,
	MSFX_GOATLA = 889,
	MSFX_GOATLH = 890,
	MSFX_GOATLD = 891,
	MSFX_GOATLS = 892,
	MSFX_GOATA = 893,
	MSFX_GOATH = 894,
	MSFX_GOATD = 895,
	MSFX_GOATS = 896,
	MSFX_BATA = 897,
	MSFX_BATH = 898,
	MSFX_BATD = 899,
	MSFX_BATS = 900,
	MSFX_GOATBA = 901,
	MSFX_GOATBH = 902,
	MSFX_GOATBD = 903,
	MSFX_GOATBS = 904,
	MSFX_ACIDA = 905,
	MSFX_ACIDH = 906,
	MSFX_ACIDD = 907,
	MSFX_ACIDS = 908,
	MSFX_SKINGA = 909,
	MSFX_SKINGH = 910,
	MSFX_SKINGD = 911,
	MSFX_SKINGS = 912,
	MSFX_FATCA = 913,
	MSFX_FATCH = 914,
	MSFX_FATCD = 915,
	MSFX_FATCS = 916,
	MSFX_FATA = 917,
	MSFX_FATH = 918,
	MSFX_FATD = 919,
	MSFX_FATS = 920,
	MSFX_MAGMAA = 921,
	MSFX_MAGMAH = 922,
	MSFX_MAGMAD = 923,
	MSFX_MAGMAS = 924,
	MSFX_RHINOA = 925,
	MSFX_RHINOH = 926,
	MSFX_RHINOD = 927,
	MSFX_RHINOS = 928,
	MSFX_THINA = 929,
	MSFX_THINH = 930,
	MSFX_THIND = 931,
	MSFX_THINS = 932,
	MSFX_BFALA = 933,
	MSFX_BFALH = 934,
	MSFX_BFALD = 935,
	MSFX_BFALS = 936,
	MSFX_GARGOA = 937,
	MSFX_GARGOH = 938,
	MSFX_GARGOD = 939,
	MSFX_GARGOS = 940,
	MSFX_MEGAA = 941,
	MSFX_MEGAH = 942,
	MSFX_MEGAD = 943,
	MSFX_MEGAS = 944,
	MSFX_SNAKEA = 945,
	MSFX_SNAKEH = 946,
	MSFX_SNAKED = 947,
	MSFX_SNAKES = 948,
	MSFX_BLACKA = 949,
	MSFX_BLACKH = 950,
	MSFX_BLACKD = 951,
	MSFX_BLACKS = 952,
	MSFX_SCBSA = 953,
	MSFX_SCBSH = 954,
	MSFX_SCBSD = 955,
	MSFX_SCBSS = 956,
	MSFX_MAGEA = 957,
	MSFX_MAGEH = 958,
	MSFX_MAGED = 959,
	MSFX_MAGES = 960,
	MSFX_GOLMA = 961,
	MSFX_GOLMH = 962,
	MSFX_GOLMD = 963,
	MSFX_GOLMS = 964,
	MSFX_DIABLOA = 965,
	MSFX_DIABLOH = 966,
	MSFX_DIABLOD = 967,
	MSFX_DIABLOS = 968,
	MSFX_DMAGA = 969,
	MSFX_DMAGH = 970,
	MSFX_DMAGD = 971,
	MSFX_DMAGS = 972,
	MUSIC_TOWN = 973,
	MUSIC_L1 = 974,
	MUSIC_L2 = 975,
	MUSIC_L3 = 976,
	MUSIC_L4 = 977,
	MUSIC_INTRO = 978,
	IS_TITERR = 979,
	PS_NAR10 = 980,
	PS_NAR11 = 981,
	PS_NAR12 = 982,
	PS_NAR13 = 983,
	PS_NAR14 = 984,
	PS_NAR15 = 985,
	PS_NAR16 = 986,
	PS_NAR17 = 987,
	PS_NAR18 = 988,
	PS_NAR19 = 989,
	IS_PICKUP = 990,
	IS_LEVELUP = 991,
};

// .146fake
enum {
	BUFFER_OFF = 0,
	BUFFER_ON = 1,
	BUFFER_PROCESS = 2,
};

// .224fake
enum {
	BIRD_PERCH = 0,
	BIRD_FLY = 1,
	BIRD_SCATTER = 2,
	BIRD_LANDING = 3,
	BIRD_HOP = 4,
};

// .227fake
enum {
	HELP_TITLE = 0,
	HELP_CONTROLS = 1,
	HELP_TXT = 2,
	HELP_HEADER = 3,
	HELP_MAINHEADER = 4,
};

// .234fake
enum {
	PART_TRANS_NONE = 0,
	PART_TRANS_LEFT = 1,
	PART_TRANS_RIGHT = 2,
};

// .235fake
enum {
	PLAYER_LEFT_SIDE = 1,
	PLAYER_RIGHT_SIDE = 2,
};

// .48fake
enum {
	VK_SPACE = 0,
	VK_ESCAPE = 1,
	VK_RETURN = 2,
	VK_BACK = 3,
	VK_DOWN = 4,
	VK_UP = 5,
	VK_LEFT = 6,
	VK_RIGHT = 7,
	VK_SNAPSHOT = 8,
	VK_F1 = 9,
	VK_F2 = 10,
	VK_F3 = 11,
	VK_F4 = 12,
	VK_F5 = 13,
	VK_F6 = 14,
	VK_F7 = 15,
	VK_F8 = 16,
	VK_F9 = 17,
	VK_F10 = 18,
	VK_F11 = 19,
	VK_F12 = 20,
	VK_PAUSE = 21,
	VK_PRIOR = 22,
	VK_NEXT = 23,
	VK_TAB = 24,
	VK_SHIFT = 25,
};

// .65fake
enum {
	TMUSIC_TOWN = 0,
	TMUSIC_L1 = 1,
	TMUSIC_L2 = 2,
	TMUSIC_L3 = 3,
	TMUSIC_L4 = 4,
	TMUSIC_INTRO = 5,
	NUM_MUSIC = 6,
};

// .66fake
enum {
	TRN_PAL_NULL = 0,
	TRN_ZOMBIE_BLUERED = 1,
	TRN_ZOMBIE_GREY = 2,
	TRN_ZOMBIE_YELLOW = 3,
	TRN_FALSPEAR_FALLENT = 4,
	TRN_FALSPEAR_DARK = 5,
	TRN_FALSPEAR_BLUE = 6,
	TRN_SKELAXE_WHITE = 7,
	TRN_SKELAXE_SKELT = 8,
	TRN_SKELAXE_BLACK = 9,
	TRN_FALSWORD_FALLENT = 10,
	TRN_FALSWORD_DARK = 11,
	TRN_FALSWORD_BLUE = 12,
	TRN_SCAV_SCAVBR = 13,
	TRN_SCAV_SCAVBE = 14,
	TRN_SCAV_SCAVW = 15,
	TRN_SKELBOW_WHITE = 16,
	TRN_SKELBOW_SKELT = 17,
	TRN_SKELBOW_BLACK = 18,
	TRN_SKELSD_WHITE = 19,
	TRN_SKELSD_SKELT = 20,
	TRN_SKELSD_BLACK = 21,
	TRN_SNEAK_SNEAKV2 = 22,
	TRN_SNEAK_SNEAKV3 = 23,
	TRN_SNEAK_SNEAKV1 = 24,
	TRN_GOATMACE_BEIGE = 25,
	TRN_GOATMACE_RED = 26,
	TRN_GOATMACE_GRAY = 27,
	TRN_BAT_RED = 28,
	TRN_BAT_GREY = 29,
	TRN_BAT_ORANGE = 30,
	TRN_GOATBOW_BEIGE = 31,
	TRN_GOATBOW_RED = 32,
	TRN_GOATBOW_GRAY = 33,
	TRN_ACID_ACIDBLK = 34,
	TRN_ACID_ACIDB = 35,
	TRN_ACID_ACIDR = 36,
	TRN_FAT_BLUE = 37,
	TRN_FAT_FATB = 38,
	TRN_FAT_FATF = 39,
	TRN_MAGMA_YELLOW = 40,
	TRN_MAGMA_BLUE = 41,
	TRN_MAGMA_WIERD = 42,
	TRN_RHINO_ORANGE = 43,
	TRN_RHINO_BLUE = 44,
	TRN_RHINO_RHINOB = 45,
	TRN_THIN_THINV3 = 46,
	TRN_THIN_THINV2 = 47,
	TRN_THIN_THINV1 = 48,
	TRN_GARGOYLE_GARE = 49,
	TRN_GARGOYLE_GARGBR = 50,
	TRN_GARGOYLE_GARGB = 51,
	TRN_MEGA_GUARD = 52,
	TRN_MEGA_VTEXL = 53,
	TRN_MEGA_BALR = 54,
	TRN_SNAKE_SNAKR = 55,
	TRN_SNAKE_SNAKG = 56,
	TRN_SNAKE_SNAKB = 57,
	TRN_BLACK_BLKKNTRT = 58,
	TRN_BLACK_BLKKNTBT = 59,
	TRN_BLACK_BLKKNTBE = 60,
	TRN_SUCC_SUCCB = 61,
	TRN_SUCC_SUCCRW = 62,
	TRN_SUCC_SUCCBW = 63,
	TRN_MAGE_CNSELG = 64,
	TRN_MAGE_CNSELGD = 65,
	TRN_MAGE_CNSELBK = 66,
};

// .72fake
enum {
	MG_ACID = 0,
	MG_BAT = 1,
	MG_BIGFALL = 2,
	MG_BLACK = 3,
	MG_DARKMAGE = 4,
	MG_DEMSKEL = 5,
	MG_FALSPEAR = 6,
	MG_FALSWORD = 7,
	MG_FAT = 8,
	MG_FATC = 9,
	MG_GARGOYLE = 10,
	MG_GOATBOW = 11,
	MG_GOATMACE = 12,
	MG_GOLEM = 13,
	MG_MAGE = 14,
	MG_MAGMA = 15,
	MG_SCAV = 16,
	MG_SKELAXE = 17,
	MG_SKELSD = 18,
	MG_SKING = 19,
	MG_SNAKE = 20,
	MG_SNEAK = 21,
	MG_SUCC = 22,
	MG_TSNEAK = 23,
	MG_ZOMBIE = 24,
	MG_WORM = 25,
	MG_GOATLORD = 26,
	MG_RHINO = 27,
	MG_SKELBOW = 28,
	MG_DIABLO = 29,
	MG_THIN = 30,
	MG_MEGA = 31,
	MG_UNRAV = 32,
	MG_FIREMAN = 33,
};

// .73fake
enum {
	TSK_NOENUM = 0,
	TSK_GAMETASK = 16384,
	TSK_BACKGROUND = 16385,
	TSK_MONSTER_CHOOSE = 16386,
	TSK_CUTSCREEN = 16387,
	SYS_TASK = 32768,
	SYS_GAMEOVER = 32769,
	SYS_PLAYER_LOAD = 32770,
};

// .74fake
enum {
	GAL_PHANTOM_MEM = 0,
	GAL_FIRST_FREE_MEM_TYPE = 1,
	GAL_FLAGS = 32768,
	GAL_HIGH = 32768,
} /* .236fake */;

// .80fake
enum {
	WORK_RAM = 1,
	FAST_RAM = 2,
};

// .89fake
enum {
	QS_INIT = 0,
	QS_TOMESPAWNED = 1,
	QS_TOMEGIVEN = 2,
	QS_MUSHSPAWNED = 3,
	QS_MUSHPICKED = 4,
	QS_MUSHGIVEN = 5,
	QS_BRAINSPAWNED = 6,
	QS_BRAINGIVEN = 7,
};

// .92fake
enum {
	CMD_STAND = 0,
	CMD_WALKXY = 1,
	CMD_ACK_PLRINFO = 2,
	CMD_ADDSTR = 3,
	CMD_ADDMAG = 4,
	CMD_ADDDEX = 5,
	CMD_ADDVIT = 6,
	CMD_SBSPELL = 7,
	CMD_GETITEM = 8,
	CMD_AGETITEM = 9,
	CMD_PUTITEM = 10,
	CMD_RESPAWNITEM = 11,
	CMD_ATTACKXY = 12,
	CMD_RATTACKXY = 13,
	CMD_SPELLXY = 14,
	CMD_TSPELLXY = 15,
	CMD_OPOBJXY = 16,
	CMD_DISARMXY = 17,
	CMD_ATTACKID = 18,
	CMD_ATTACKPID = 19,
	CMD_RATTACKID = 20,
	CMD_RATTACKPID = 21,
	CMD_SPELLID = 22,
	CMD_SPELLPID = 23,
	CMD_TSPELLID = 24,
	CMD_TSPELLPID = 25,
	CMD_RESURRECT = 26,
	CMD_OPOBJT = 27,
	CMD_KNOCKBACK = 28,
	CMD_TALKXY = 29,
	CMD_NEWLVL = 30,
	CMD_WARP = 31,
	CMD_CHEAT_EXPERIENCE = 32,
	CMD_CHEAT_SPELL_LEVEL = 33,
	CMD_DEBUG = 34,
	CMD_SYNCDATA = 35,
	CMD_MONSTDEATH = 36,
	CMD_MONSTDAMAGE = 37,
	CMD_PLRDEAD = 38,
	CMD_REQUESTGITEM = 39,
	CMD_REQUESTAGITEM = 40,
	CMD_GOTOGETITEM = 41,
	CMD_GOTOAGETITEM = 42,
	CMD_OPENDOOR = 43,
	CMD_CLOSEDOOR = 44,
	CMD_OPERATEOBJ = 45,
	CMD_PLROPOBJ = 46,
	CMD_BREAKOBJ = 47,
	CMD_CHANGEPLRITEMS = 48,
	CMD_DELPLRITEMS = 49,
	CMD_PLRDAMAGE = 50,
	CMD_PLRLEVEL = 51,
	CMD_DROPITEM = 52,
	CMD_PLAYER_JOINLEVEL = 53,
	CMD_SEND_PLRINFO = 54,
	CMD_SATTACKXY = 55,
	CMD_ACTIVATEPORTAL = 56,
	CMD_DEACTIVATEPORTAL = 57,
	CMD_DLEVEL_0 = 58,
	CMD_DLEVEL_1 = 59,
	CMD_DLEVEL_2 = 60,
	CMD_DLEVEL_3 = 61,
	CMD_DLEVEL_4 = 62,
	CMD_DLEVEL_5 = 63,
	CMD_DLEVEL_6 = 64,
	CMD_DLEVEL_7 = 65,
	CMD_DLEVEL_8 = 66,
	CMD_DLEVEL_9 = 67,
	CMD_DLEVEL_10 = 68,
	CMD_DLEVEL_11 = 69,
	CMD_DLEVEL_12 = 70,
	CMD_DLEVEL_13 = 71,
	CMD_DLEVEL_14 = 72,
	CMD_DLEVEL_15 = 73,
	CMD_DLEVEL_16 = 74,
	CMD_DLEVEL_JUNK = 75,
	CMD_DLEVEL_END = 76,
	CMD_HEALOTHER = 77,
	CMD_STRING = 78,
	CMD_SETSTR = 79,
	CMD_SETMAG = 80,
	CMD_SETDEX = 81,
	CMD_SETVIT = 82,
	CMD_RETOWN = 83,
	CMD_SPELLXYD = 84,
	CMD_ITEMEXTRA = 85,
	CMD_SYNCPUTITEM = 86,
	CMD_KILLGOLEM = 87,
	CMD_SYNCQUEST = 88,
	CMD_ENDSHIELD = 89,
	CMD_AWAKEGOLEM = 90,
	FAKE_CMD_SETID = 91,
	FAKE_CMD_DROPID = 92,
	NUM_CMDS = 93,
};

// .93fake
enum {
	PAD_UP = 1,
	PAD_DOWN = 2,
	PAD_LEFT = 4,
	PAD_RIGHT = 8,
	PAD_ALL_DIRS = 15,
	PAD_START = 16,
	PAD_SELECT = 32,
	PAD_CROSS = 64,
	PAD_SQUARE = 128,
	PAD_CIRCLE = 256,
	PAD_TRIANGLE = 512,
	PAD_L1 = 1024,
	PAD_L2 = 2048,
	PAD_R1 = 4096,
	PAD_R2 = 8192,
	PAD_BUTTONS = 16320,
};

// .94fake
enum {
	FLG_FLOOR = 1,
	FLG_NOTRANS = 2,
	FLG_CYCLE = 4,
	FLG_PENTAGRAM = 8,
	FLG_WATER = 16,
};

// .96fake
enum {
	PEQ_pNAnim = 0,
	PEQ_pDAnim = 1,
	PEQ_pAAnim = 2,
	PEQ_pBAnim = 3,
	PEQ_pFAnim = 4,
	PEQ_pLAnim = 5,
	PEQ_pTAnim = 6,
	PEQ_pHAnim = 7,
	PEQ_pWAnim = 8,
};

// .99fake
enum {
	PAD_UP_IS_UPRIGHT = 0,
	PAD_UP_IS_UP = 1,
};

typedef enum B_PER_PIX {
	BITS_4 = 0,
	BITS_5 = 1,
	BITS_8 = 2,
} B_PER_PIX;

typedef enum CTRL_SET {
	CTRL_BEGINNER = 0,
	CTRL_ADVANCED = 1,
} CTRL_SET;

typedef enum DEV_KIT {
	DK_SONY_ISA = 0,
	DK_SONY_PCI = 1,
	DK_CLIMAX = 2,
} DEV_KIT;

typedef enum FILE_SYSTEM {
	FS_PC = 0,
	FS_CD = 1,
} FILE_SYSTEM;

typedef enum GAL_ERROR_CODE {
	ERR_GAL_NO_ERROR = 0,
	ERR_RUN_OUT_OF_MEM_HDRS = 1,
	ERR_GAL_MEM_TYPE_EXISTS = 2,
	ERR_GAL_MEM_TYPE_OVERLAP = 3,
	ERR_GAL_INVALID_MEM_TYPE = 4,
	ERR_GAL_INVALID_MEM_HANDLE = 5,
	ERR_GAL_MEM_ALREADY_UNLOCKED = 6,
	ERR_GAL_MEM_BLOCK_COLLISION = 7,
	ERR_GAL_MEM_AREA_NOT_COVERED = 8,
	ERR_GAL_NO_MEM_MOVE = 9,
	NUM_OF_ERROR_MESSAGES = 10,
} GAL_ERROR_CODE;

typedef enum GAL_VERB_LEV {
	GAL_SILENT = 0,
	GAL_AVERAGE = 1,
	GAL_NOISY = 2,
} GAL_VERB_LEV;

typedef enum GM_SPEEDS {
	GM_SLOW = 0,
	GM_FAST = 1,
} GM_SPEEDS;

typedef enum KANJI_FRMS {
	KANJI_QUEST = 0,
	KANJI_MAIN = 1,
} KANJI_FRMS;

typedef enum LANG_DB_NO {
	LANG_DB_MAIN = 0,
	LANG_DB_QUEST = 1,
	LANG_DB_BACK = 2,
	LANG_DB_CREDITS = 3,
} LANG_DB_NO;

typedef enum LANG_TYPE {
	LANG_ENGLISH = 0,
	LANG_FRENCH = 1,
	LANG_GERMAN = 2,
	LANG_SWEDISH = 3,
	LANG_JAP = 4,
	LANG_NONE = 5,
} LANG_TYPE;

typedef enum MEM_TYPES {
	MT_NONE = 0,
	MT_FRONTEND = 1,
	MT_DEMO = 2,
	MT_POST_EXIT = 3,
	MT_IN_GAME = 4,
	MT_POST_QUIT = 5,
} MEM_TYPES;

typedef enum OVER_TYPE {
	OVR_NONE = 0,
	OVR_PREGAME = 1,
	OVR_GAME = 2,
	OVR_FRONTEND = 3,
	OVR_FMV = 4,
} OVER_TYPE;

typedef enum PACTION {
	PL_NOACTION = 0,
	PL_WALK = 1,
	PL_STAND = 2,
	PL_ATTACK = 3,
	PL_HIT = 4,
	PL_BLOCK = 5,
	PL_DEATH = 6,
	PL_TWALK = 7,
	PL_TSTAND = 8,
	PL_LMAGIC = 9,
	PL_QMAGIC = 10,
	PL_FMAGIC = 11,
} PACTION;

typedef enum PLR_MODE {
	PM_STAND = 0,
	PM_WALK = 1,
	PM_WALK2 = 2,
	PM_WALK3 = 3,
	PM_ATTACK = 4,
	PM_RATTACK = 5,
	PM_BLOCK = 6,
	PM_GOTHIT = 7,
	PM_DEATH = 8,
	PM_SPELL = 9,
	PM_NEWLVL = 10,
	PM_QUIT = 11,
} PLR_MODE;

typedef enum TARGET {
	T_PLAYER = 0,
	T_MONSTER = 1,
	T_MISSILE = 2,
} TARGET;

typedef enum TPAGE_TYPES {
	TPAGE_4BIT = 0,
	TPAGE_8BIT = 1,
	TPAGE_16BIT = 2,
} TPAGE_TYPES;

typedef enum TXT_JUST {
	JustLeft = 0,
	JustCentre = 1,
	JustRight = 2,
} TXT_JUST;

typedef enum _copyprot_results {
	COPYPROT_OK = 1,
	COPYPROT_CANCEL = 2,
} _copyprot_results;

typedef enum _dialmodes {
	MODE_ANSWER = 3,
	MODE_DIALOLD = 4,
	MODE_DIALNEW = 5,
} _dialmodes;

typedef enum _difficulty {
	DIFF_NORMAL = 0,
	DIFF_NIGHTMARE = 1,
	DIFF_HELL = 2,
	NUM_DIFFICULTIES = 3,
} _difficulty;

typedef enum _item_indexes {
	IDI_GOLD = 0,
	IDI_WARRIOR = 1,
	IDI_WARRSHLD = 2,
	IDI_WARRCLUB = 3,
	IDI_ROGUE = 4,
	IDI_SORCEROR = 5,
	IDI_CLEAVER = 6,
	IDI_FIRSTQUEST = 6,
	IDI_SKCROWN = 7,
	IDI_INFRARING = 8,
	IDI_ROCK = 9,
	IDI_OPTAMULET = 10,
	IDI_TRING = 11,
	IDI_BANNER = 12,
	IDI_HARCREST = 13,
	IDI_STEELVEIL = 14,
	IDI_GLDNELIX = 15,
	IDI_ANVIL = 16,
	IDI_MUSHROOM = 17,
	IDI_BRAIN = 18,
	IDI_FUNGALTM = 19,
	IDI_SPECELIX = 20,
	IDI_BLDSTONE = 21,
	IDI_LASTQUEST = 22,
	IDI_MAPOFDOOM = 22,
	IDI_EAR = 23,
	IDI_HEAL = 24,
	IDI_MANA = 25,
	IDI_IDENTIFY = 26,
	IDI_PORTAL = 27,
	IDI_ARMOFVAL = 28,
	IDI_FULLHEAL = 29,
	IDI_FULLMANA = 30,
	IDI_GRISWOLD = 31,
	IDI_LGTFORGE = 32,
	IDI_LAZSTAFF = 33,
	IDI_RESURRECT = 34,
} _item_indexes;

typedef enum _mainmenu_selections {
	MAINMENU_SINGLE_PLAYER = 1,
	MAINMENU_MULTIPLAYER = 2,
	MAINMENU_REPLAY_INTRO = 3,
	MAINMENU_SHOW_CREDITS = 4,
	MAINMENU_EXIT_DIABLO = 5,
	MAINMENU_ATTRACT_MODE = 6,
} _mainmenu_selections;

typedef enum _selhero_selections {
	SELHERO_NEW_DUNGEON = 1,
	SELHERO_CONTINUE = 2,
	SELHERO_CONNECT = 3,
	SELHERO_PREVIOUS = 4,
} _selhero_selections;

typedef enum _setlevels {
	SL_SKELKING = 1,
	SL_BONECHAMB = 2,
	SL_MAZE = 3,
	SL_POISONWATER = 4,
	SL_VILEBETRAYER = 5,
} _setlevels;

typedef enum _ui_classes {
	UI_WARRIOR = 0,
	UI_ROGUE = 1,
	UI_SORCERER = 2,
	UI_NUM_CLASSES = 3,
} _ui_classes;

typedef enum card_events {
	cardevent_directory = 0,
	cardevent_inserted = 1,
	cardevent_saving = 2,
	cardevent_loading = 3,
	cardevent_formatting = 4,
	cardevent_deleting = 5,
	cardevent_error = 6,
	cardevent_initialise = 7,
	cardevent_removed = 8,
} card_events;

typedef enum hw_event {
	hw_end = 0,
	hw_empty = 1,
	hw_new = 2,
	hw_error = 3,
	hw_silence = 4,
} hw_event;

typedef enum ping_status {
	ping_ok = 0,
	ping_error = 1,
	ping_empty = 2,
	ping_new = 3,
	ping_silence = 4,
} ping_status;

typedef enum read_ret {
	read_ok = 0,
	read_error = 1,
	read_invalid = 2,
	read_no_card = 3,
} read_ret;

typedef enum write_ret {
	write_ok = 0,
	write_error = 1,
	write_no_space = 2,
	write_no_card = 3,
} write_ret;

typedef int unknown;

typedef unsigned long ATOM;

typedef struct _BLOCKENTRY* BLOCKENTRYPTR;

typedef unsigned char BOOL;

typedef unsigned char BYTE;

typedef char CHAR;

typedef unsigned char* CHECKFUNC();
typedef unsigned char* CHECKFUNC1();
typedef int CLSID;

typedef unsigned long COLORREF;

typedef unsigned char* CREATEHERO();
typedef unsigned long CRITICAL_SECTION;

typedef void* CdlCB();
typedef unsigned short DECDCTTAB[34816];

typedef unsigned char* DELETEHERO();
typedef int DIRECTION;

typedef void* DLGPROC;

typedef void* DOTSK_CBACK();
typedef unsigned long DWORD;

typedef int EACHOOKCALLBACKFUNC();
typedef unsigned char* ENUMHEROPROC();
typedef unsigned char* ENUMHEROS();
typedef unsigned long* FARPROC;

typedef struct _FILEHEADER* FILEHEADERPTR;

typedef struct MEM_HDR* (*FIND_ROUTINE);
typedef unsigned long FOURCC;

typedef void* FeFuncPtr();
typedef void* GAL_FILTER();
typedef unsigned char* GETDEFHERO();
typedef unsigned long HANDLE;

typedef struct _HASHENTRY* HASHENTRYPTR;

typedef unsigned long HBRUSH;

typedef unsigned long HCURSOR;

typedef unsigned long HDC;

typedef unsigned long HFONT;

typedef unsigned long HICON;

typedef unsigned long HINSTANCE;

typedef char* HKEY;

typedef unsigned long HMENU;

typedef unsigned long HMODULE;

typedef unsigned long HPALETTE;

typedef unsigned long HRESULT;

typedef struct _HSARCHIVE* HSARCHIVE;

typedef struct _HSCODESTREAM* HSCODESTREAM;

typedef struct _HSFILE* HSFILE;

typedef struct _HSFINDFILE* HSFINDFILE;

typedef struct _HSGDIFONT* HSGDIFONT;

typedef struct _HSGDIOBJ* HSGDIOBJ;

typedef struct _HSTRANS* HSTRANS;

typedef struct _HSVIDEO* HSVIDEO;

typedef void* HTRANS;

typedef unsigned long HWND;

typedef int INTFN();
typedef unsigned long LCID;

typedef long LONG;

typedef unsigned long LPARAM;

typedef unsigned char* LPBYTE;

typedef struct _ITEMIDLIST* LPCITEMIDLIST;

typedef struct RECT* LPCRECT;

typedef unsigned long* LPCRITICAL_SECTION;

typedef char* LPCSTR;

typedef char* LPCTSTR;

typedef void* LPCVOID;

typedef unsigned char* LPDRAWITEMSTRUCT;

typedef unsigned long* LPDWORD;

typedef struct FILETIME* LPFILETIME;

typedef unsigned short* LPINT;

typedef struct _ITEMIDLIST* LPITEMIDLIST;

typedef long* LPLONG;

typedef struct MSG* LPMSG;

typedef void* LPOVERLAPPED;

typedef struct PAINTSTRUCT* LPPAINTSTRUCT;

typedef struct PALETTEENTRY* LPPALETTEENTRY;

typedef struct _PARAMS* LPPARAMS;

typedef unsigned long* LPSECURITY_ATTRIBUTES;

typedef unsigned long* LPSIZE;

typedef char* LPSTR;

typedef long* LPTOP_LEVEL_EXCEPTION_FILTER;

typedef char* LPTSTR;

typedef struct UIRECT* LPUIRECT;

typedef void* LPVOID;

typedef struct _WIN32_FIND_DATA* LPWIN32_FIND_DATA;

typedef unsigned long LRESULT;

typedef int* MAPITFUNC();
typedef char* MEMBLOCK;

typedef long MHANDLE;

typedef void* MIADDPRC();
typedef void* MIPROC();
typedef int MTYPE;

typedef void MVI;

typedef void* MissPrintPtr();
typedef struct POLY_FT4* (*OBJ_PFUNC);
typedef unsigned char PACKET;

typedef struct _PARAMS* PARAMSPTR;

typedef struct FILETIME* PFILETIME;

typedef char** PHKEY;

typedef void* PLAYSND();
typedef long* PLONG;

typedef int POINTL;

typedef int* PROGRESSFCN();
typedef unsigned long* PUINT;

typedef unsigned long REGSAM;

typedef unsigned long REG_OFF;

typedef short S16;

typedef long S32;

typedef long S64;

typedef char S8;

typedef struct _SCODEEXECUTEDATA* SCODEEXECUTEDATAPTR;

typedef void* SEVTHANDLER();
typedef struct _SHAREDDATA* SHAREDDATAPTR;

typedef short SHORT;

typedef int SIZEL;

typedef void* SMSGHANDLER();
typedef unsigned char* SMSGIDLEPROC();
typedef unsigned char* SNETABORTPROC();
typedef struct _SNETADDR* SNETADDRPTR;

typedef struct _SNETCAPS* SNETCAPSPTR;

typedef unsigned char* SNETCATEGORYPROC();
typedef unsigned char* SNETCHECKAUTHPROC();
typedef struct _SNETCREATEDATA* SNETCREATEDATAPTR;

typedef unsigned char* SNETCREATEPROC();
typedef unsigned char* SNETDRAWDESCPROC();
typedef unsigned char* SNETENUMDEVICESPROC();
typedef unsigned char* SNETENUMGAMESPROC();
typedef unsigned char* SNETENUMPROVIDERSPROC();
typedef void* SNETEVENTPROC();
typedef struct _SNETEVENT* SNETEVENTPTR;

typedef unsigned char* SNETGETARTPROC();
typedef unsigned char* SNETGETDATAPROC();
typedef int* SNETMESSAGEBOXPROC();
typedef struct _SNETPLAYERDATA* SNETPLAYERDATAPTR;

typedef unsigned char* SNETPLAYSOUNDPROC();
typedef struct _SNETPROGRAMDATA* SNETPROGRAMDATAPTR;

typedef unsigned char* SNETSELECTEDPROC();
typedef unsigned char* SNETSPIBIND();
typedef struct _SNETSPI* SNETSPIPTR;

typedef unsigned char* SNETSPIQUERY();
typedef struct _SNETSPI_DEVICELIST* SNETSPI_DEVICELISTPTR;

typedef struct _SNETSPI_GAMELIST* SNETSPI_GAMELISTPTR;

typedef unsigned char* SNETSTATUSPROC();
typedef struct _SNETUIDATA* SNETUIDATAPTR;

typedef struct _SNETVERSIONDATA* SNETVERSIONDATAPTR;

typedef struct _SNET_DATA_SYSCOLORTABLE* SNET_DATA_SYSCOLORTABLEPTR;

typedef unknown* STR_CB_PTR();
typedef struct _SVIDPALETTEUSE* SVIDPALETTEUSEPTR;

typedef int SYSTEMTASK();
typedef void* SpuIRQCallbackProc();
typedef void* SpuStCallbackProc();
typedef void* SpuTransferCallbackProc();
typedef void* SsMarkCallbackProc();
typedef char TCHAR;

typedef void* TCrypt();
typedef unsigned char* TGetNameFcn();
typedef void THREADPROC();
typedef unsigned long TIMERPROC;

typedef void* TMenuFcn();
typedef void* TMenuUpdateFcn();
typedef struct TBMP* TPBMP;

typedef struct _modeminfo* TPMODEM;

typedef struct _uidefaultstats* TPUIDEFSTATS;

typedef struct _uiheroinfo* TPUIHEROINFO;

typedef void* TSK_CBACK();
typedef unsigned short U16;

typedef unsigned long U32;

typedef unsigned long U64;

typedef unsigned char U8;

typedef unsigned char UBYTE;

typedef unsigned char UCHAR;

typedef unsigned int UINT;

typedef unsigned long ULONG;

typedef unsigned short USHORT;

typedef unsigned short UWORD;

typedef void VOID;

typedef void* VOIDFN();
typedef unsigned long* WNDPROC();
typedef unsigned short WORD;

typedef long WPARAM;

typedef unsigned long __int64;

typedef int arg_t;

typedef unsigned char byte;

typedef char* caddr_t;

typedef long daddr_t;

typedef short dev_t;

typedef unsigned long dword;

typedef unsigned short gid_t;

typedef unsigned long ino_t;

typedef short int16;

typedef long int32;

typedef long int64;

typedef char int8;

typedef int jmp_buf[12];

typedef long off_t;

typedef struct _physadr* physadr;

typedef long* qaddr_t;

typedef unsigned long qword;

typedef short s16;

typedef long s32;

typedef long s64;

typedef char s8;

typedef unsigned int size_t;

typedef int strdata[504];

typedef long swblk_t;

typedef long time_t;

typedef unsigned short u16;

typedef unsigned long u32;

typedef unsigned long u64;

typedef unsigned char u8;

typedef unsigned char u_char;

typedef unsigned int u_int;

typedef unsigned long u_long;

typedef unsigned short u_short;

typedef unsigned char uchar;

typedef unsigned short uid_t;

typedef unsigned int uint;

typedef unsigned short uint16;

typedef unsigned long uint32;

typedef unsigned long uint64;

typedef unsigned char uint8;

typedef unsigned long ulong;

typedef int unknown;

typedef unsigned short ushort;

typedef void* va_list;

typedef unsigned char wchar_t;

typedef unsigned short word;

typedef struct __vtbl_ptr_type {
} __vtbl_ptr_type;

typedef struct t11TLinkedList1Z8PalEntry {
	struct PalEntry* Next;
	struct PalEntry* Prev;
} t11TLinkedList1Z8PalEntry;

typedef struct TP_LINK {
	struct TPAGE_DEF* Next;
	struct TPAGE_DEF* Prev;
} TP_LINK;

typedef struct _physadr {
	int r[1];
} _physadr;

typedef struct label_t {
	int val[12];
} label_t;

typedef struct _quad {
	long val[2];
} _quad, quad;

typedef struct MonstList {
	unsigned short NumOfMonsters;
	unsigned short TexNum;
	unsigned char* TheList;
	char* ListName;
	unsigned long QuestBits;
} MonstList;

typedef struct MonstLevel {
	int NumOfLists;
	struct MonstList* TheLists;
} MonstLevel;

typedef struct ToT {
	unsigned long* head;
	long size;
} ToT;

typedef struct TCB {
	long status;
	long mode;
	unsigned long reg[40];
	long system[6];
} TCB;

typedef struct EvCB {
	unsigned long desc;
	long status;
	long spec;
	long mode;
	long* (*FHandler)();
	long system[2];
} EvCB;

typedef struct EXEC {
	unsigned long pc0;
	unsigned long gp0;
	unsigned long t_addr;
	unsigned long t_size;
	unsigned long d_addr;
	unsigned long d_size;
	unsigned long b_addr;
	unsigned long b_size;
	unsigned long s_addr;
	unsigned long s_size;
	unsigned long sp;
	unsigned long fp;
	unsigned long gp;
	unsigned long ret;
	unsigned long base;
} EXEC;

typedef struct XF_HDR {
	char key[8];
	unsigned long text;
	unsigned long data;
	struct EXEC exec;
	char title[60];
} XF_HDR;

typedef struct DIRENTRY {
	char name[20];
	long attr;
	long size;
	struct DIRENTRY* next;
	long head;
	char system[4];
} DIRENTRY;

typedef struct MATRIX {
	short m[3][3];
	long t[3];
} MATRIX;

typedef struct VECTOR {
	long vx;
	long vy;
	long vz;
	long pad;
} VECTOR;

typedef struct SVECTOR {
	short vx;
	short vy;
	short vz;
	short pad;
} SVECTOR;

typedef struct CVECTOR {
	unsigned char r;
	unsigned char g;
	unsigned char b;
	unsigned char cd;
} CVECTOR;

typedef struct DVECTOR {
	short vx;
	short vy;
} DVECTOR;

typedef struct EVECTOR {
	struct SVECTOR v;
	struct VECTOR sxyz;
	struct DVECTOR sxy;
	struct CVECTOR rgb;
	short txuv;
	short pad;
	long chx;
	long chy;
} EVECTOR;

typedef struct RVECTOR {
	struct SVECTOR v;
	unsigned char uv[2];
	unsigned short pad;
	struct CVECTOR c;
	struct DVECTOR sxy;
	unsigned long sz;
} RVECTOR;

typedef struct CRVECTOR3 {
	struct RVECTOR r01;
	struct RVECTOR r12;
	struct RVECTOR r20;
	struct RVECTOR* r0;
	struct RVECTOR* r1;
	struct RVECTOR* r2;
	unsigned long* rtn;
} CRVECTOR3;

typedef struct DIVPOLYGON3 {
	unsigned long ndiv;
	unsigned long pih;
	unsigned long piv;
	unsigned short clut;
	unsigned short tpage;
	struct CVECTOR rgbc;
	unsigned long* ot;
	struct RVECTOR r0;
	struct RVECTOR r1;
	struct RVECTOR r2;
	struct CRVECTOR3 cr[5];
} DIVPOLYGON3;

typedef struct CRVECTOR4 {
	struct RVECTOR r01;
	struct RVECTOR r02;
	struct RVECTOR r31;
	struct RVECTOR r32;
	struct RVECTOR rc;
	struct RVECTOR* r0;
	struct RVECTOR* r1;
	struct RVECTOR* r2;
	struct RVECTOR* r3;
	unsigned long* rtn;
} CRVECTOR4;

typedef struct DIVPOLYGON4 {
	unsigned long ndiv;
	unsigned long pih;
	unsigned long piv;
	unsigned short clut;
	unsigned short tpage;
	struct CVECTOR rgbc;
	unsigned long* ot;
	struct RVECTOR r0;
	struct RVECTOR r1;
	struct RVECTOR r2;
	struct RVECTOR r3;
	struct CRVECTOR4 cr[5];
} DIVPOLYGON4;

typedef struct SPOL {
	short xy[3];
	short uv[2];
	short rgb[3];
} SPOL;

typedef struct POL4 {
	short sxy[4][2];
	short sz[4][2];
	short uv[4][2];
	short rgb[4][3];
	short code;
} POL4;

typedef struct POL3 {
	short sxy[3][2];
	short sz[3][2];
	short uv[3][2];
	short rgb[3][3];
	short code;
} POL3;

typedef struct TMESH {
	struct SVECTOR* v;
	struct SVECTOR* n;
	struct SVECTOR* u;
	struct CVECTOR* c;
	unsigned long len;
} TMESH;

typedef struct QMESH {
	struct SVECTOR* v;
	struct SVECTOR* n;
	struct SVECTOR* u;
	struct CVECTOR* c;
	unsigned long lenv;
	unsigned long lenh;
} QMESH;

typedef struct RECT {
	short x;
	short y;
	short w;
	short h;
} RECT, HRGN, LPCDLGTEMPLATE;

typedef struct RECT32 {
	int x;
	int y;
	int w;
	int h;
} RECT32;

typedef struct DR_ENV {
	unsigned long tag;
	unsigned long code[15];
} DR_ENV;

typedef struct DRAWENV {
	struct RECT clip;
	short ofs[2];
	struct RECT tw;
	unsigned short tpage;
	unsigned char dtd;
	unsigned char dfe;
	unsigned char isbg;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	struct DR_ENV dr_env;
} DRAWENV;

typedef struct DISPENV {
	struct RECT disp;
	struct RECT screen;
	unsigned char isinter;
	unsigned char isrgb24;
	unsigned char pad0;
	unsigned char pad1;
} DISPENV;

typedef struct P_TAG {
	unsigned int addr;
	unsigned int len;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
} P_TAG;

typedef struct P_CODE {
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
} P_CODE;

typedef struct POLY_F3 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	short x1;
	short y1;
	short x2;
	short y2;
} POLY_F3;

typedef struct POLY_F4 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	short x1;
	short y1;
	short x2;
	short y2;
	short x3;
	short y3;
} POLY_F4;

typedef struct POLY_FT3 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char u0;
	unsigned char v0;
	unsigned short clut;
	short x1;
	short y1;
	unsigned char u1;
	unsigned char v1;
	unsigned short tpage;
	short x2;
	short y2;
	unsigned char u2;
	unsigned char v2;
	unsigned short pad1;
} POLY_FT3;

typedef struct POLY_FT4 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char u0;
	unsigned char v0;
	unsigned short clut;
	short x1;
	short y1;
	unsigned char u1;
	unsigned char v1;
	unsigned short tpage;
	short x2;
	short y2;
	unsigned char u2;
	unsigned char v2;
	unsigned short pad1;
	short x3;
	short y3;
	unsigned char u3;
	unsigned char v3;
	unsigned short pad2;
} POLY_FT4;

typedef struct POLY_G3 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char pad1;
	short x1;
	short y1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char pad2;
	short x2;
	short y2;
} POLY_G3;

typedef struct POLY_G4 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char pad1;
	short x1;
	short y1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char pad2;
	short x2;
	short y2;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char pad3;
	short x3;
	short y3;
} POLY_G4;

typedef struct POLY_GT3 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char u0;
	unsigned char v0;
	unsigned short clut;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p1;
	short x1;
	short y1;
	unsigned char u1;
	unsigned char v1;
	unsigned short tpage;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p2;
	short x2;
	short y2;
	unsigned char u2;
	unsigned char v2;
	unsigned short pad2;
} POLY_GT3;

typedef struct POLY_GT4 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char u0;
	unsigned char v0;
	unsigned short clut;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p1;
	short x1;
	short y1;
	unsigned char u1;
	unsigned char v1;
	unsigned short tpage;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p2;
	short x2;
	short y2;
	unsigned char u2;
	unsigned char v2;
	unsigned short pad2;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char p3;
	short x3;
	short y3;
	unsigned char u3;
	unsigned char v3;
	unsigned short pad3;
} POLY_GT4;

typedef struct LINE_F2 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	short x1;
	short y1;
} LINE_F2;

typedef struct LINE_G2 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p1;
	short x1;
	short y1;
} LINE_G2;

typedef struct LINE_F3 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	short x1;
	short y1;
	short x2;
	short y2;
	unsigned long pad;
} LINE_F3;

typedef struct LINE_G3 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p1;
	short x1;
	short y1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p2;
	short x2;
	short y2;
	unsigned long pad;
} LINE_G3;

typedef struct LINE_F4 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	short x1;
	short y1;
	short x2;
	short y2;
	short x3;
	short y3;
	unsigned long pad;
} LINE_F4;

typedef struct LINE_G4 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p1;
	short x1;
	short y1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p2;
	short x2;
	short y2;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char p3;
	short x3;
	short y3;
	unsigned long pad;
} LINE_G4;

typedef struct SPRT {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char u0;
	unsigned char v0;
	unsigned short clut;
	short w;
	short h;
} SPRT;

typedef struct SPRT_16 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	unsigned char u0;
	unsigned char v0;
	unsigned short clut;
} SPRT_16, SPRT_8;

typedef struct TILE {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
	short w;
	short h;
} TILE;

typedef struct TILE_16 {
	unsigned long tag;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	short x0;
	short y0;
} TILE_16, TILE_8, TILE_1;

typedef struct DR_MODE {
	unsigned long tag;
	unsigned long code[2];
} DR_MODE, DR_TWIN, DR_AREA, DR_OFFSET, DR_STP;

typedef struct DR_MOVE {
	unsigned long tag;
	unsigned long code[5];
} DR_MOVE;

typedef struct DR_LOAD {
	unsigned long tag;
	unsigned long code[3];
	unsigned long p[13];
} DR_LOAD;

typedef struct DR_TPAGE {
	unsigned long tag;
	unsigned long code[1];
} DR_TPAGE;

typedef struct TMD_PRIM {
	unsigned long id;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char p0;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p2;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char p3;
	unsigned short tpage;
	unsigned short clut;
	unsigned char u0;
	unsigned char v0;
	unsigned char u1;
	unsigned char v1;
	unsigned char u2;
	unsigned char v2;
	unsigned char u3;
	unsigned char v3;
	struct SVECTOR x0;
	struct SVECTOR x1;
	struct SVECTOR x2;
	struct SVECTOR x3;
	struct SVECTOR n0;
	struct SVECTOR n1;
	struct SVECTOR n2;
	struct SVECTOR n3;
	struct SVECTOR* v_ofs;
	struct SVECTOR* n_ofs;
	unsigned short vert0;
	unsigned short vert1;
	unsigned short vert2;
	unsigned short vert3;
	unsigned short norm0;
	unsigned short norm1;
	unsigned short norm2;
	unsigned short norm3;
} TMD_PRIM;

typedef struct TIM_IMAGE {
	unsigned long mode;
	struct RECT* crect;
	unsigned long* caddr;
	struct RECT* prect;
	unsigned long* paddr;
} TIM_IMAGE;

typedef struct POINT {
	long x;
	long y;
} POINT;

typedef struct MSG {
	unsigned long hwnd;
	unsigned int message;
	long wParam;
	unsigned long lParam;
	unsigned long time;
	struct POINT pt;
} MSG;

typedef struct FILETIME {
	unsigned long dwLowDateTime;
	unsigned long dwHighDateTime;
} FILETIME;

typedef struct _WIN32_FIND_DATA {
	unsigned long dwFileAttributes;
	struct FILETIME ftCreationTime;
	struct FILETIME ftLastAccessTime;
	struct FILETIME ftLastWriteTime;
	unsigned long nFileSizeHigh;
	unsigned long nFileSizeLow;
	unsigned long dwReserved0;
	unsigned long dwReserved1;
	char cFileName[256];
	char cAlternateFileName[14];
} _WIN32_FIND_DATA, WIN32_FIND_DATA;

typedef struct PALETTEENTRY {
	unsigned char peRed;
	unsigned char peGreen;
	unsigned char peBlue;
	unsigned char peFlags;
} PALETTEENTRY;

typedef struct PAINTSTRUCT {
	unsigned long hdc;
	unsigned char fErase;
	struct RECT rcPaint;
	unsigned char fRestore;
	unsigned char fIncUpdate;
	unsigned char rgbReserved[16];
} PAINTSTRUCT;

typedef struct LARGE_INTEGER {
	unsigned long LowPart;
	unsigned long HighPart;
} LARGE_INTEGER;

typedef struct GUID {
	unsigned long Data1;
	unsigned short Data2;
	unsigned short Data3;
	unsigned char Data4[8];
} GUID;

typedef struct WAVEFORMATEX {
	unsigned short wFormatTag;
	unsigned short nChannels;
	unsigned long nSamplesPerSec;
	unsigned long nAvgBytesPerSec;
	unsigned short nBlockAlign;
	unsigned short wBitsPerSample;
	unsigned short cbSize;
} WAVEFORMATEX;

typedef struct MMCKINFO {
	unsigned long ckid;
	unsigned long cksize;
	unsigned long fccType;
	unsigned long dwDataOffset;
	unsigned long dwFlags;
} MMCKINFO;

typedef struct WAVEFORMAT {
	unsigned short wFormatTag;
	unsigned short nChannels;
	unsigned long nSamplesPerSec;
	unsigned long nAvgBytesPerSec;
	unsigned short nBlockAlign;
} WAVEFORMAT;

typedef struct PCMWAVEFORMAT {
	struct WAVEFORMAT wf;
	unsigned short wBitsPerSample;
} PCMWAVEFORMAT;

typedef struct VS_FIXEDFILEINFO {
	unsigned long dwSignature;
	unsigned long dwStrucVersion;
	unsigned long dwFileVersionMS;
	unsigned long dwFileVersionLS;
	unsigned long dwProductVersionMS;
	unsigned long dwProductVersionLS;
	unsigned long dwFileFlagsMask;
	unsigned long dwFileFlags;
	unsigned long dwFileOS;
	unsigned long dwFileType;
	unsigned long dwFileSubtype;
	unsigned long dwFileDateMS;
	unsigned long dwFileDateLS;
} VS_FIXEDFILEINFO;

typedef struct WNDCLASSEX {
	unsigned int cbSize;
	unsigned int style;
	unsigned long* (*lpfnWndProc)();
	int cbClsExtra;
	int cbWndExtra;
	unsigned long hInstance;
	unsigned long hIcon;
	unsigned long hCursor;
	unsigned long hbrBackground;
	char* lpszMenuName;
	char* lpszClassName;
	unsigned long hIconSm;
} WNDCLASSEX;

typedef struct SHITEMID {
	unsigned short cb;
	unsigned char abID[1];
} SHITEMID;

typedef struct _ITEMIDLIST {
	struct SHITEMID mkid;
} _ITEMIDLIST, ITEMIDLIST;

typedef struct _HSTRANS {
	int unused;
} _HSTRANS;

typedef struct SIZE {
	int cx;
	int cy;
} SIZE;

typedef struct TBMP {
	unsigned char* data;
	struct SIZE datasize;
	long userdata;
	char text[256];
} TBMP;

typedef struct UIRECT {
	long left;
	long top;
	long right;
	long bottom;
} UIRECT;

typedef struct MSFX {
	unsigned short pszName;
} MSFX;

typedef struct CKINFO {
	unsigned long dwSize;
	unsigned long dwOffset;
} CKINFO;

typedef struct TSnd {
} TSnd;

typedef struct TSFX {
	unsigned char Channel;
	unsigned char bFlags;
	unsigned short pszName;
} TSFX;

typedef struct AnimStruct {
	char Frames;
	char Rate;
} AnimStruct;

typedef struct MonsterData {
	unsigned short GraphicType;
	unsigned char has_special;
	unsigned short sndfile;
	unsigned char snd_special;
	char TransFile;
	char Frames[6];
	char Rate[6];
	int mName;
	char mMinDLvl;
	char mMaxDLvl;
	char mLevel;
	short mMinHP;
	short mMaxHP;
	unsigned char mAi;
	unsigned short mFlags;
	unsigned char mInt;
	unsigned char mHit;
	unsigned char mAFNum;
	unsigned char mMinDamage;
	unsigned char mMaxDamage;
	unsigned char mHit2;
	unsigned char mAFNum2;
	unsigned char mMinDamage2;
	unsigned char mMaxDamage2;
	char mArmorClass;
	char mMonstClass;
	unsigned short mMagicRes;
	unsigned short mMagicRes2;
	unsigned short mTreasure;
	char mSelFlag;
	unsigned short mExp;
} MonsterData;

typedef struct CMonster {
	struct MonsterData* MData;
	struct AnimStruct Anims[6];
	unsigned short Snds;
	unsigned char mtype;
	unsigned char mPlaceFlags;
	unsigned char mMinHP;
	unsigned char mMaxHP;
	unsigned char has_special;
	unsigned char mAFNum;
	char mdeadval;
} CMonster;

typedef struct MonsterStruct {
	int mtalkmsg;
	int _mgoalvar1;
	int _mgoalvar2;
	int _mgoalvar3;
	int _mhitpoints;
	int _mmaxhp;
	short _mVar1;
	short _mVar2;
	short _mVar3;
	short _mVar4;
	short _mVar5;
	short _mVar6;
	short _mVar7;
	short _mVar8;
	short _mxvel;
	short _myvel;
	unsigned short _mFlags;
	unsigned short mExp;
	unsigned short mMagicRes;
	char _mMTidx;
	char _mmode;
	char _mx;
	char _my;
	char _mfutx;
	char _mfuty;
	char _moldx;
	char _moldy;
	char _mxoff;
	char _myoff;
	char _mdir;
	unsigned char _menemy;
	char _mAnimDelay;
	char _mAnimCnt;
	char _mAnimLen;
	char _mAnimFrame;
	char _mAFNum;
	char _lastx;
	char _lasty;
	char _udeadval;
	char mWhoHit;
	char mLevel;
	char mArmorClass;
	unsigned char _mgoal;
	unsigned char _menemyx;
	unsigned char _menemyy;
	unsigned char _mAi;
	unsigned char _mint;
	unsigned char _msquelch;
	unsigned char _uniqtype;
	unsigned char mHit;
	unsigned char mMinDamage;
	unsigned char mMaxDamage;
	unsigned char mHit2;
	unsigned char mMinDamage2;
	unsigned char mMaxDamage2;
	unsigned char leader;
	unsigned char leaderflag;
	unsigned char unpackfilesize;
	unsigned char mlid;
	char Action;
	char _mDelFlag;
	int mName;
	struct CMonster* MType;
	struct MonsterData* MData;
} MonsterStruct;

typedef struct UniqMonstStruct {
	char mtype;
	unsigned short mName;
	unsigned char mlevel;
	unsigned short mmaxhp;
	unsigned char mAi;
	unsigned char mint;
	unsigned char mMinDamage;
	unsigned char mMaxDamage;
	unsigned short mMagicRes;
	unsigned short mUnqAttr;
	unsigned char mUnqVar1;
	unsigned char mUnqVar2;
	int mtalkmsg;
} UniqMonstStruct;

typedef struct STONEPAL {
	unsigned char NoStonePals;
	int StonePal;
} STONEPAL;

typedef struct DEF_ARGS {
	unsigned long a0;
	unsigned long a1;
	unsigned long a2;
	unsigned long a3;
} DEF_ARGS;

typedef struct GAL_STRUCT {
	int OriginalSize;
	unsigned int Offset;
} GAL_STRUCT;

typedef struct TASK {
	struct TASK* Next;
	struct TASK* Prev;
	unsigned long Id;
	unsigned long SleepTime;
	unsigned long fToInit;
	unsigned long fToDie;
	unsigned long fKillable;
	unsigned long fActive;
	unsigned long fXtraStack;
	void* Stack;
	unsigned long StackSize;
	void* Data;
	int TskEnv[12];
	void* (*Main)();
	long hndTask;
	unsigned short XtraLongs;
	unsigned short MaxStackSizeBytes;
} TASK;

typedef struct tab_entry {
	unsigned char a;
	unsigned char b;
} tab_entry;

typedef struct PLStruct {
	int PLName;
	int PLPower;
	int PLParam1;
	int PLParam2;
	char PLMinLvl;
	long PLIType;
	unsigned char PLGOE;
	unsigned char PLDouble;
	unsigned char PLOk;
	int PLMinVal;
	int PLMaxVal;
	int PLMultVal;
} PLStruct;

typedef struct UItemStruct {
	int UIName;
	char UIItemId;
	char UIMinLvl;
	char UINumPL;
	int UIValue;
	char UIPower1;
	int UIParam1;
	int UIParam2;
	char UIPower2;
	int UIParam3;
	int UIParam4;
	char UIPower3;
	int UIParam5;
	int UIParam6;
	char UIPower4;
	int UIParam7;
	int UIParam8;
	char UIPower5;
	int UIParam9;
	int UIParam10;
	char UIPower6;
	int UIParam11;
	int UIParam12;
} UItemStruct;

typedef struct ItemDataStruct {
	unsigned char iRnd;
	char iClass;
	char iLoc;
	unsigned char iCurs;
	char itype;
	char iItemId;
	unsigned short iName;
	unsigned short iSName;
	char iMinMLvl;
	unsigned char iDurability;
	unsigned char iMinDam;
	unsigned char iMaxDam;
	unsigned char iMinAC;
	unsigned char iMaxAC;
	char iMinStr;
	char iMinMag;
	char iMinDex;
	long iFlags;
	unsigned char iMiscId;
	unsigned char iSpell;
	unsigned char iUsable;
	unsigned short iValue;
	unsigned short iMaxValue;
} ItemDataStruct;

typedef struct ItemGetRecordStruct {
	int nSeed;
	unsigned short wCI;
	int nIndex;
	unsigned long dwTimestamp;
} ItemGetRecordStruct;

typedef struct ItemStruct {
	int _iVAdd1;
	int _iVMult1;
	int _iVAdd2;
	int _iVMult2;
	int _iSeed;
	int _ivalue;
	int _iIvalue;
	long _iFlags;
	int _iPLAC;
	unsigned short _iCreateInfo;
	unsigned short _iName;
	unsigned short _iIName;
	unsigned short ItemFrame;
	short _itype;
	short IDidx;
	short _iPLMana;
	short _iPLHP;
	char _iUid;
	short _iPLToHit;
	short _iPLDam;
	char _iPLDamMod;
	char _iMinDam;
	char _iMaxDam;
	char _iSpell;
	short _iDurability;
	short _iMaxDur;
	char _iPLGetHit;
	char _iPLLight;
	char _iFMinDam;
	char _iFMaxDam;
	char _iLMinDam;
	char _iLMaxDam;
	char _iPLEnAc;
	unsigned char _iCharges;
	char _iAC;
	unsigned char _iMaxCharges;
	unsigned char _iCurs;
	unsigned char _iMiscId;
	char _iAnimLen;
	char _iAnimFrame;
	char _iSelFlag;
	char _iMagical;
	char _ix;
	char _iy;
	char _iLoc;
	char _iClass;
	char _iPLStr;
	char _iPLMag;
	char _iPLDex;
	char _iPLVit;
	char _iPLFR;
	char _iPLLR;
	char _iPLMR;
	char _iSplLvlAdd;
	char _iRequest;
	char _iPrePower;
	char _iSufPower;
	unsigned char _iMinStr;
	unsigned char _iMinDex;
	char _oldlight;
	unsigned char _iMinMag;
	char _PlrCreate;
	char _iStatFlag;
	char _iPostDraw;
	char _iAnimFlag;
	char _iIdentified;
} ItemStruct;

typedef struct FRAME_HDR {
	unsigned int FrOffset;
	int X;
	int Y;
	unsigned int PalNum;
	unsigned int NotTrans;
	unsigned int Rotated;
	unsigned int InVRAM;
	unsigned int CompType;
	unsigned int Floor;
	unsigned int Cycle;
	unsigned int pad;
	unsigned int W;
	unsigned int H;
	unsigned int PentaGram;
	unsigned int pad2;
} FRAME_HDR;

typedef struct SysObj {
	long MemHnd;
} SysObj;

typedef struct FileIO {
	struct SysObj SysObj;
	unsigned long MemId;
	long hndPath;
	char* SearchPath;
	struct __vtbl_ptr_type* _vf[7];
} FileIO;

typedef struct CPart {
	unsigned long Piece;
	short X;
	short Y;
} CPart;

typedef struct CBlock {
	unsigned long NumOfParts;
	struct CPart Parts[1];
} CBlock;

typedef struct CBlockHdr {
	unsigned long NumOfBlocks;
	struct CBlock Blocks[1];
} CBlockHdr;

typedef struct PAL {
	unsigned int InVram;
	unsigned int NumOfCols;
	unsigned short Cols[1];
} PAL;

typedef struct PAL_INVRAM {
	unsigned int InVram;
	unsigned int Pad;
	unsigned int clut;
} PAL_INVRAM;

typedef struct DECOMP_BUFFER {
	unsigned long TpX;
	unsigned long TpY;
} DECOMP_BUFFER;

typedef struct ALL_DECOMP_BUFFERS {
	unsigned long NumOfBuffers;
	struct DECOMP_BUFFER TheBuffers[1];
} ALL_DECOMP_BUFFERS;

typedef struct SPR_HDR {
	unsigned int DecompOffset;
	unsigned int CreatureOffset;
	unsigned int PalOffset;
	unsigned int FrameOffset;
	unsigned int BaseFrame;
	unsigned int DestTPage;
	unsigned int ComponentOffset;
	unsigned int NumOfCreatures;
	unsigned int NumOfFrames;
	unsigned int NumOfPals;
	unsigned int TWidth;
	unsigned int THeight;
	unsigned int IsTiles;
	unsigned int Spare;
} SPR_HDR;

typedef struct TP_LOAD_HDR {
	unsigned int U;
	unsigned int V;
	unsigned int tpage;
} TP_LOAD_HDR;

typedef struct CTextFileInfo {
	char* FileName;
} CTextFileInfo;

typedef struct CCreatureAction {
	unsigned short BaseFrame;
	unsigned char NumOfFrames;
	unsigned char NumOfPhysFrames;
	unsigned char DirRemap[8];
	unsigned char AnimRemap[1];
} CCreatureAction;

typedef struct CCreatureHdr {
	long NumOfActions;
	struct CCreatureAction Cr;
} CCreatureHdr;

typedef struct TextDat {
	unknown OwnDat;
	int TexNum;
	int LastFrame;
	unknown DatLoaded;
	long hndDat;
	long hndHdr;
	long hndPalOffset;
	long hndCreatureOffset;
	long hndBlockOffsets;
	struct FRAME_HDR* Frames;
	struct SPR_HDR* Hdr;
	void* Pals;
	int* PalOffset;
	int* CreatureOffset;
	unsigned char* CreatureAnims;
	unsigned char* Blocks;
	unknown Loaded;
	int LoadCount;
	struct CTextFileInfo* FileInfo;
	long hndDecompBuffer;
	int DecX;
	int DecY;
	int PalX;
	int PalY;
	int Scr;
	int NumOfBuffers[2];
	long hndDecompArrays;
} TextDat;

typedef struct CScreen {
	struct TextDat TextDat;
	int LoadedId;
	int TpX;
	int TpY;
} CScreen;

typedef struct OBJ_LOAD_INFO {
	short Creature;
	unsigned short TexDat;
} OBJ_LOAD_INFO;

typedef struct ObjDataStruct {
	char oload;
	char ofindex;
	char ominlvl;
	char omaxlvl;
	char olvltype;
	char otheme;
	char oquest;
	unsigned char oAnimFlag;
	short oAnimDelay;
	short oAnimLen;
	unsigned char oSolidFlag;
	unsigned char oMissFlag;
	unsigned char oLightFlag;
	char oBreak;
	char oSelFlag;
	unsigned char oTrapFlag;
} ObjDataStruct;

typedef struct ObjectStruct {
	short _olid;
	int _oRndSeed;
	short _oAnimDelay;
	short _oAnimCnt;
	short _oAnimLen;
	short _oVar1;
	short _oVar2;
	short _oVar3;
	short _oVar4;
	short _oVar5;
	short _oVar6;
	short _oVar7;
	short _oVar8;
	char _otype;
	char _ox;
	char _oy;
	char _oAnimFrame;
	char _oBreak;
	char _oSelFlag;
	unsigned char _oLight;
	unsigned char _oAnimFlag;
	unsigned char _oDelFlag;
	unsigned char _oSolidFlag;
	unsigned char _oMissFlag;
	unsigned char _oPreFlag;
	unsigned char _oTrapFlag;
	unsigned char _oDoorFlag;
} ObjectStruct;

typedef struct ShadowStruct {
	unsigned char strig;
	unsigned char s1;
	unsigned char s2;
	unsigned char s3;
	unsigned char nv1;
	unsigned char nv2;
	unsigned char nv3;
} ShadowStruct;

typedef struct ScrollStruct {
	int _sxoff;
	int _syoff;
	int _sdx;
	int _sdy;
	int _sdir;
} ScrollStruct;

typedef struct THEME_LOC {
	int x;
	int y;
	int ttval;
	int width;
	int height;
} THEME_LOC;

typedef struct MINIXY {
	char stairsupx;
	char stairsupy;
	char stairsdownx;
	char stairsdowny;
	char townwarpx;
	char townwarpy;
	char pentax;
	char pentay;
	char pwaterx;
	char pwatery;
} MINIXY;

typedef struct MICROS {
	unsigned short mt[16];
} MICROS;

typedef struct map_info {
	short dMonster;
	unsigned char dBits;
	char dObject;
	char dItem;
	char dMissile;
	char dFlags;
	char dTransVal;
} map_info;

typedef struct PortalStruct {
	int ltype;
	char x;
	char y;
	char level;
	char setlvlnum;
	unsigned char open;
	unsigned char setlvl;
} PortalStruct;

typedef struct QuestStruct {
	unsigned char _qlevel;
	unsigned char _qtype;
	unsigned char _qactive;
	unsigned char _qlvltype;
	int _qtx;
	int _qty;
	unsigned char _qslvl;
	unsigned char _qidx;
	unsigned char _qmsg;
	unsigned char _qvar1;
	unsigned char _qvar2;
	unsigned char _qlog;
	unsigned char pad_for_laz;
} QuestStruct;

typedef struct QuestData {
	unsigned char _qdlvl;
	char _qdmultlvl;
	unsigned char _qlvlt;
	unsigned char _qdtype;
	unsigned char _qdrnd;
	unsigned char _qslvl;
	unsigned char _qflags;
	int _qdmsg;
	int _qlstr;
} QuestData;

typedef struct TCmd {
	unsigned char bCmd;
} TCmd;

typedef struct TCmdLoc {
	unsigned char bCmd;
	unsigned char x;
	unsigned char y;
} TCmdLoc;

typedef struct TCmdLocParam1 {
	unsigned char bCmd;
	unsigned char x;
	unsigned char y;
	unsigned short wParam1;
} TCmdLocParam1;

typedef struct TCmdLocParam2 {
	unsigned char bCmd;
	unsigned char x;
	unsigned char y;
	unsigned short wParam1;
	unsigned short wParam2;
} TCmdLocParam2;

typedef struct TCmdLocParam3 {
	unsigned char bCmd;
	unsigned char x;
	unsigned char y;
	unsigned short wParam1;
	unsigned short wParam2;
	unsigned short wParam3;
} TCmdLocParam3;

typedef struct TCmdParam1 {
	unsigned char bCmd;
	unsigned short wParam1;
} TCmdParam1;

typedef struct TCmdParam2 {
	unsigned char bCmd;
	unsigned short wParam1;
	unsigned short wParam2;
} TCmdParam2;

typedef struct TCmdParam3 {
	unsigned char bCmd;
	unsigned short wParam1;
	unsigned short wParam2;
	unsigned short wParam3;
} TCmdParam3;

typedef struct TCmdGolem {
	unsigned char bCmd;
	unsigned char _mx;
	unsigned char _my;
	unsigned char _mdir;
	unsigned char _menemy;
	unsigned char _currlevel;
	short _mhitpoints;
} TCmdGolem;

typedef struct TCmdQuest {
	unsigned char bCmd;
	unsigned char q;
	unsigned char qstate;
	unsigned char qlog;
	unsigned char qvar1;
} TCmdQuest;

typedef struct TCmdGItem {
	unsigned char bCmd;
	unsigned char bMaster;
	unsigned char bPnum;
	unsigned char bCursitem;
	unsigned char bLevel;
	unsigned char x;
	unsigned char y;
	unsigned char bId;
	unsigned char bDur;
	unsigned char bMDur;
	unsigned char bCh;
	unsigned char bMCh;
	unsigned short wValue;
	unsigned short wIndx;
	unsigned short wCI;
	unsigned long dwSeed;
	unsigned long dwBuff;
	unsigned long dwTime;
} TCmdGItem;

typedef struct TCmdPItem {
	unsigned char bCmd;
	unsigned char x;
	unsigned char y;
	unsigned char bId;
	unsigned char bDur;
	unsigned char bMDur;
	unsigned char bCh;
	unsigned char bMCh;
	unsigned short wValue;
	unsigned short wIndx;
	unsigned short wCI;
	unsigned long dwSeed;
	unsigned long dwBuff;
} TCmdPItem;

typedef struct TCmdChItem {
	unsigned char bCmd;
	unsigned char bLoc;
	unsigned short wIndx;
	unsigned short wCI;
	unsigned long dwSeed;
	unsigned char bId;
} TCmdChItem;

typedef struct TCmdDelItem {
	unsigned char bCmd;
	unsigned char bLoc;
} TCmdDelItem;

typedef struct TCmdDamage {
	unsigned char bCmd;
	unsigned char bPlr;
	unsigned long dwDam;
} TCmdDamage;

typedef struct TCmdPlrInfoHdr {
	unsigned char bCmd;
	unsigned short wOffset;
	unsigned short wBytes;
} TCmdPlrInfoHdr;

typedef struct TCmdString {
	unsigned char bCmd;
	char str[80];
} TCmdString;

typedef struct TFakeCmdPlr {
	unsigned char bCmd;
	unsigned char bPlr;
} TFakeCmdPlr;

typedef struct TFakeDropPlr {
	unsigned char bCmd;
	unsigned char bPlr;
	unsigned long dwReason;
} TFakeDropPlr;

typedef struct TSyncHeader {
	unsigned char bCmd;
	unsigned char bLevel;
	unsigned short wLen;
	unsigned char bObjId;
	unsigned char bObjCmd;
	unsigned char bItemI;
	unsigned char bItemX;
	unsigned char bItemY;
	unsigned short wItemIndx;
	unsigned short wItemCI;
	int dwItemSeed;
	unsigned char bItemId;
	unsigned char bItemDur;
	unsigned char bItemMDur;
	unsigned char bItemCh;
	unsigned char bItemMCh;
	unsigned short wItemVal;
	unsigned long dwItemBuff;
	unsigned char bPInvLoc;
	unsigned short wPInvIndx;
	unsigned short wPInvCI;
	int dwPInvSeed;
	unsigned char bPInvId;
} TSyncHeader;

typedef struct TSyncMonster {
	unsigned char _mndx;
	unsigned char _mx;
	unsigned char _my;
	unsigned char _menemy;
	unsigned char _mdelta;
} TSyncMonster;

typedef struct TPktHdr {
	unsigned char px;
	unsigned char py;
	unsigned char targx;
	unsigned char targy;
	unsigned long php;
	unsigned long pmhp;
	unsigned char bstr;
	unsigned char bmag;
	unsigned char bdex;
	unsigned short wCheck;
	unsigned short wLen;
} TPktHdr;

typedef struct TPkt {
	struct TPktHdr hdr;
	unsigned char body[492];
} TPkt;

typedef struct DMonsterStr {
	unsigned char _mx;
	unsigned char _my;
	unsigned char _mdir;
	unsigned char _menemy;
	int _mhitpoints;
} DMonsterStr;

typedef struct DObjectStr {
	unsigned char bCmd;
} DObjectStr;

typedef struct DLevel {
	struct TCmdPItem item[127];
	struct DObjectStr object[127];
	struct DMonsterStr monster[190];
} DLevel;

typedef struct LocalLevel {
	unsigned char automapsv[5][40];
} LocalLevel;

typedef struct DPortal {
	unsigned char x;
	unsigned char y;
	unsigned char level;
	unsigned char ltype;
	unsigned char setlvl;
} DPortal;

typedef struct MultiQuests {
	unsigned char qstate;
	unsigned char qlog;
	unsigned char qvar1;
} MultiQuests;

typedef struct DJunk {
	struct DPortal portal[4];
	struct MultiQuests quests[4];
} DJunk;

typedef struct OBJ_TYPE_INFO {
	void* (*Constructor)();
	void* (*Destructor)();
	void* (*Printer)();
	int* (*GetWidth)();
	int* (*GetHeight)();
	int* (*GetXOff)();
	int* (*GetYOff)();
	int* (*GetPal)();
} OBJ_TYPE_INFO;

typedef struct OBJ_STRUCT {
	struct OBJ_STRUCT* Next;
	struct OBJ_STRUCT* Prev;
	unsigned long ID;
	long XPos;
	long YPos;
	long ZPos;
	long XVel;
	long YVel;
	long ZVel;
	struct OBJ_TYPE_INFO* OTI;
	struct OBJ_LIST* OL;
	void* Data;
	long MemHandle;
} OBJ_STRUCT;

typedef struct CPad {
	unsigned char get_both;
	unsigned char active;
	unsigned char PadType;
	unsigned char PADTICK;
	unsigned short PADTICKMASK;
	unsigned short PadNum;
	unsigned short Cur;
	unsigned short Up;
	unsigned short Down;
	unsigned short Tick;
	unsigned short Old;
	unsigned short both_Cur;
	unsigned short both_Up;
	unsigned short both_Down;
	unsigned short both_Tick;
	unsigned short both_Old;
	unknown TickDown[16];
	unknown TickBoth[16];
	unsigned char TickCount[16];
	unsigned short BothTickCount[16];
	unsigned short GazTickCount[16];
} CPad;

typedef struct CFont {
	int TextureId;
	unsigned short FontTab[256];
	int PrintyOTpos;
	int MinX;
	int MaxX;
	int Width;
	struct TextDat* ThisDat;
	unsigned char FontHeight;
} CFont;

typedef struct SCREEN_ENV {
	struct DRAWENV drawenv;
	struct DISPENV dispenv;
} SCREEN_ENV;

typedef struct LittleGt4 {
	unsigned char u0;
	unsigned char v0;
	unsigned short clut;
	unsigned char u1;
	unsigned char v1;
	unsigned short tpage;
	unsigned char u2;
	unsigned char v2;
	unsigned char u3;
	unsigned char v3;
	unsigned char w;
	unsigned char h;
	unsigned char code;
	unsigned char Flags;
} LittleGt4;

typedef struct RGBPOLY {
	int r1;
	int g1;
	int b1;
	int r2;
	int g2;
	int b2;
	int r3;
	int g3;
	int b3;
	int r4;
	int g4;
	int b4;
} RGBPOLY;

typedef struct glRGBPOLY {
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char code1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char code2;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char code3;
	unsigned char r4;
	unsigned char g4;
	unsigned char b4;
	unsigned char code4;
} glRGBPOLY;

typedef struct RgbBlockInf {
	int FromValR;
	int ToValR;
	int FromValG;
	int ToValG;
	int FromValB;
	int ToValB;
} RgbBlockInf;

typedef struct RGBPOINT {
	int r;
	int g;
	int b;
} RGBPOINT;

typedef struct RGBData {
	struct glRGBPOLY rgbb;
	struct RGBPOINT rgb_ity1;
	struct RGBPOINT rgb_ity2;
} RGBData;

typedef struct CBlocks {
	struct TextDat TextDat;
	struct TextDat* MonstTexDat;
	struct TextDat* ObjTexDat;
	struct MonstList* MonsterList;
	int RndX;
	int RndY;
	int MonstTexId;
	long hndBlocks;
	int ObjTexId;
	int ItemTexId;
	struct TextDat* ItemTexDat;
	int BgTexId;
	struct TextDat* BgTexDat;
	int pOtPos[2];
	unknown IsTown;
	int NumOfBlocks;
	struct LittleGt4* Gt4s;
	long hndGt4s;
	struct RECT* Rects;
	long hndRects;
	struct RECT ClipRect;
	int StX;
	int StY;
	int Mx;
	int My;
	int pBlockX[2];
	int pBlockY[2];
	int CursX;
	int CursY;
	struct RgbBlockInf GlBlockInf;
} CBlocks;

typedef struct Dialog {
	int BevelGfx;
	int BorderGfx;
	int BackGfx;
	int DialogOTpos;
} Dialog;

typedef struct DB {
	struct DRAWENV draw;
	struct DISPENV disp;
} DB;

typedef struct PlayerStruct {
	enum PLR_MODE _pmode;
	char walkpath[25];
	unsigned char plractive;
	char destAction;
	char destParam1;
	char destParam2;
	char destParam3;
	char destParam4;
	int plrlevel;
	int WorldX;
	int WorldY;
	short _px;
	short _py;
	short _pownerx;
	short _pownery;
	short _poldx;
	short _poldy;
	char _pxoff;
	char _pyoff;
	short _pxvel;
	short _pyvel;
	char _pdir;
	char _pgfxnum;
	unsigned char* _pAnimData;
	int _pAnimDelay;
	int _pAnimCnt;
	int _pAnimLen;
	int _pAnimFrame;
	char _pAnimWidth;
	char _pAnimWidth2;
	char DeadLevel;
	char _plid;
	char _pvid;
	char _pSpell;
	char _pSplType;
	char _pSplFrom;
	char _pTSpell;
	char _pTSplType;
	int _pRSpell;
	char _pRSplType;
	int _pSBkSpell;
	char _pSBkSplType;
	char _pSplLvl[64];
	unsigned long _pMemSpells;
	unsigned long _pAblSpells;
	unsigned long _pScrlSpells;
	char _pSpellFlags;
	char _pwtype;
	unsigned char _pBlockFlag;
	unsigned char _pInvincible;
	char _pLightRad;
	unsigned char _pLvlChanging;
	char _pName[32];
	char _pClass;
	short _pStrength;
	short _pBaseStr;
	short _pMagic;
	short _pBaseMag;
	short _pDexterity;
	short _pBaseDex;
	short _pVitality;
	short _pBaseVit;
	int _pStatPts;
	int _pDamageMod;
	int _pBaseToBlk;
	long _pHPBase;
	long _pMaxHPBase;
	long _pHitPoints;
	long _pMaxHP;
	int _pHPPer;
	long _pManaBase;
	long _pMaxManaBase;
	long _pMana;
	long _pMaxMana;
	int _pManaPer;
	char _pLevel;
	char _pMaxLvl;
	long _pExperience;
	long _pMaxExp;
	long _pNextExper;
	char _pArmorClass;
	char _pMagResist;
	char _pFireResist;
	char _pLghtResist;
	long _pGold;
	unsigned char _pInfraFlag;
	short _pVar1;
	short _pVar2;
	short _pVar3;
	short _pVar4;
	short _pVar5;
	short _pVar6;
	short _pVar7;
	short _pVar8;
	unsigned char _pLvlVisited[17];
	unsigned char _pSLvlVisited[10];
	int _pGFXLoad;
	unsigned char peq;
	int _pAFNum;
	int _pNFrames;
	int _pWFrames;
	int _pAFrames;
	int _pSFrames;
	int _pSFNum;
	int _pHFrames;
	int _pDFrames;
	int _pBFrames;
	struct ItemStruct InvBody[7];
	struct ItemStruct InvList[40];
	int _pNumInv;
	char InvGrid[40];
	struct ItemStruct SpdList[8];
	struct ItemStruct HoldItem;
	int inv_highlight;
	int body_highlight;
	int holdinv_x;
	int holdinv_y;
	int holdbody_loc;
	int _pIMinDam;
	int _pIMaxDam;
	int _pIAC;
	int _pIBonusDam;
	int _pIBonusToHit;
	int _pIBonusAC;
	int _pIBonusDamMod;
	unsigned long _pISpells;
	long _pIFlags;
	int _pIGetHit;
	char _pISplLvlAdd;
	char _pISplCost;
	int _pISplDur;
	int _pIEnAc;
	int _pIFMinDam;
	int _pIFMaxDam;
	int _pILMinDam;
	int _pILMaxDam;
	int _pOilType;
	unsigned char pTownWarps;
	unsigned char pDungMsgs;
	unsigned char pLvlLoad;
	unsigned long pDiabloKillLevel;
} PlayerStruct;

typedef struct controller_pos {
	int rx;
	int ry;
	int rz;
	int tx;
	int ty;
	int tz;
	int px;
	int py;
	int srx;
	int sry;
	int srz;
	int stx;
	int sty;
	int stz;
	int spx;
	int spy;
} controller_pos;

typedef struct pad_assigns {
	char* txt;
	int pnum;
	char font_num;
} pad_assigns;

typedef struct KEY_ASSIGNS {
	int txt;
	int pad_val;
	void* (*func)();
	int combo_val;
} KEY_ASSIGNS, key_assigns;

typedef struct CPlayer {
	struct TextDat TextDat;
	long hndDatMem;
	unsigned short NumOfPlayers;
	unknown InTown;
	unsigned short PlayerNum;
	unsigned short Tpage;
	int TexId;
	int LastScrX;
	int LastScrY;
	int LastOtPos;
} CPlayer;

typedef struct SpellTarget {
	unsigned char forcespell;
	unknown active;
	short _sx;
	short _sy;
	short _nsx;
	short _nsy;
	unsigned char _stx;
	unsigned char _sty;
	unknown changed;
	struct PlayerStruct* player;
	int pnum;
	int angle;
	int spotid;
	short lastx[8];
	short lasty[8];
} SpellTarget;

typedef struct GamePad {
	struct PlayerStruct* player;
	struct SpellTarget spell;
	char pnum;
	char allow_walking;
	char style;
	int pad_up_button;
	void* (*pad_up_action)();
	struct CPad* Pad;
	int combo_key;
	void* (*button_down[14])();
	void* (*button_combo[14])();
	unsigned char await_combo;
	unsigned char combo_menu_active;
} GamePad;

typedef struct found_objects {
	char index;
	char x;
	char y;
} found_objects;

typedef struct CdlLOC {
	unsigned char minute;
	unsigned char second;
	unsigned char sector;
	unsigned char track;
} CdlLOC;

typedef struct CdlFILTER {
	unsigned char file;
	unsigned char chan;
	unsigned short pad;
} CdlFILTER;

typedef struct CdlATV {
	unsigned char val0;
	unsigned char val1;
	unsigned char val2;
	unsigned char val3;
} CdlATV;

typedef struct CdlFILE {
	struct CdlLOC pos;
	unsigned long size;
	char name[16];
} CdlFILE;

typedef struct StHEADER {
	unsigned short id;
	unsigned short type;
	unsigned short secCount;
	unsigned short nSectors;
	unsigned long frameCount;
	unsigned long frameSize;
	unsigned short width;
	unsigned short height;
	unsigned long dummy1;
	unsigned long dummy2;
	struct CdlLOC loc;
} StHEADER;

typedef struct PCIO {
	struct FileIO FileIO;
} PCIO;

typedef struct CdIO {
	struct FileIO FileIO;
} CdIO;

typedef struct DList {
	struct SysObj SysObj;
	int XRot;
	int YRot;
	int ZRot;
	struct MATRIX MyRotMatrix;
	struct MATRIX MyTransMatrix;
	struct VECTOR Out[4];
	struct SVECTOR In[4];
} DList;

typedef struct ARGB {
	unsigned char b;
	unsigned char g;
	unsigned char r;
	unsigned char a;
} ARGB;

typedef struct shapetbl {
	unsigned int type;
	int next;
	short width;
	short height;
	short centerx;
	short centery;
	int shapex;
	int reserved;
	int transposed;
	int rotated;
	int shapey;
	int mipmaps;
	char data;
} shapetbl, SHAPE;

typedef struct windowtbl {
	long id;
	int x;
	int y;
	int width;
	int height;
	unsigned char bpp;
	unsigned char type;
	unsigned char ram;
	unsigned char unused;
	int minx;
	int miny;
	int maxx;
	int maxy;
	struct shapetbl* shape;
	struct DISPENV dispenv;
	struct DRAWENV drawenv;
} windowtbl, WINDOW;

typedef struct coorddef {
	int x;
	int y;
	int z;
} coorddef, LIBCOORD;

typedef struct scoorddef {
	int x;
	int y;
} scoorddef, SCOORD;

typedef struct matrixtdef {
	int m[9];
} matrixtdef, MATRIX3DT;

typedef struct TSPRT {
	unsigned char a0;
	unsigned char a1;
	unsigned char a2;
	unsigned char len;
	unsigned long tpage;
	unsigned char r;
	unsigned char g;
	unsigned char b;
	unsigned char code;
	unsigned long xy;
	unsigned char u;
	unsigned char v;
	unsigned short clut;
	unsigned long wh;
} TSPRT;

typedef struct memclassstruct {
	char** bottomblock;
	char** topblock;
	int pad;
	int align;
	int cache;
	int sentinel;
} memclassstruct, MEMORYCLASS;

typedef struct FONTFILE {
	unsigned long type;
	unsigned char first;
	unsigned char last;
	unsigned char maxwidth;
	unsigned char maxheight;
	unsigned char space;
	unsigned char yinc;
	unsigned char baseline;
	char pad1;
	char filesize[4];
	int palette;
	int width;
	int height;
	int xinc;
	int xoffset;
	int yoffset;
	long shape;
} FONTFILE;

typedef struct coordsdef {
	int frames;
	int coords;
	struct coorddef point[40];
} coordsdef, COORDS;

typedef struct linedef {
	int start;
	int end;
	int colour;
	int thickness;
} linedef, LINE;

typedef struct linesdef {
	int lines;
	int basex;
	int basey;
	int basez;
	struct linedef line[40];
} linesdef, LINES;

typedef struct dirangledef {
	int heading;
	int pitch;
	int roll;
} dirangledef, DIRANGLES;

typedef struct arcangledef {
	int orientation;
	int heading;
	int pitch;
	int roll;
	int vheading;
	int vpitch;
	int vroll;
} arcangledef, ARCANGLES;

typedef struct SHAPETABLEENTRY {
	char id[4];
	long offset;
} SHAPETABLEENTRY;

typedef struct SHAPEFILE {
	char type[4];
	long len;
	long num;
	char creator[4];
	struct SHAPETABLEENTRY tbl[1];
} SHAPEFILE;

typedef struct radialsymdef {
	int maxindex;
	int shiftcount;
	int delta;
	int scalefactor;
	struct shapetbl** shapes;
} radialsymdef, RADIALSYM;

typedef struct graphicsmodeinfostruct {
	int width;
	int height;
	int bpp;
	int shapetype;
	int banked;
	int pagedbanks;
	int modex;
	int pageflip;
	int zbuffer;
	int hwdram;
	int hwblit;
	int hwfill;
	int hwscale;
	int hwtmask;
	int hwtexture;
	int hwvbl;
} graphicsmodeinfostruct, GRAPHICSMODEINFO;

typedef struct chunkhdrstruct {
	int type;
	int size;
} chunkhdrstruct, CHUNKHDR;

typedef struct chunkhdrchkstruct {
	int type;
	int size;
	int crc;
} chunkhdrchkstruct, CHUNKHDRCHK;

typedef struct UNIQUEID {
	unsigned long a;
	unsigned short b;
	unsigned short c;
	unsigned char d[8];
} UNIQUEID;

typedef struct threadstruct {
	int item;
	int stacksize;
	int priority;
	int processor;
} threadstruct, THREAD;

typedef struct cdstreamstruct {
	long id;
	char* start;
	char* end;
	char* write;
	char* header;
	char* get;
	char* release;
	int handle;
	int state;
	int control;
	int status;
	int abort;
	int datahascrc;
	int crcerrors;
	int crcretries;
	int buffersize;
	long blocksize;
	int readsize;
	int chunksize;
	int relocationsize;
	long fileoffset;
	int fileend;
	long filesize;
	int dataoffset;
	int seekposition;
	int seekoffset;
	int idtype;
	int idmask;
	struct cdstreamstruct* nextstream;
	void* emptyblock;
	void* head;
	void* tail;
	void* block;
	int timer;
	int blocktime;
	int streamfull;
	int getable;
	int releaseable;
} cdstreamstruct, CDSTREAM;

typedef struct STREAM {
	unsigned long Offset;
	unsigned long Size;
	unsigned char Name[12];
} STREAM;

typedef struct STRHDR {
	unsigned char Name[12];
	unsigned long Offset;
	int Size;
} STRHDR;

typedef struct SFXHDR {
	char used;
	char loop;
	char playing;
	char state;
	unknown TaskAlive;
	struct STRHDR* StreamHND;
	unsigned char type;
	unsigned char ChunkGot;
	int voice;
	int volume;
	int s_volume;
	int pitch;
	int stream_sec;
	int stream_offs;
	int stream_read;
	int stream_stall;
	int stream_pos;
	int SPU_frame;
	int SPU_sec;
	int SPU_pos;
	int SPUstreamaddr;
	int framecount;
	int lastcount;
	int sec_num;
	int SPU_sec_num;
	int ah;
	int stream_ending;
	int DMA_size;
	int spu_rate;
	int SizeIn;
	unsigned char* mem;
	unsigned long stream_playing;
	int SfxNo;
	char name[14];
} SFXHDR;

typedef struct DECDCTENV {
	unsigned char iq_y[64];
	unsigned char iq_c[64];
	short dct[64];
} DECDCTENV;

typedef struct ENCSPUENV {
	short* src;
	short* dest;
	short* work;
	long size;
	long loop_start;
	char loop;
	char byte_swap;
	char proceed;
	char pad4;
} ENCSPUENV;

typedef struct SpuVolume {
	short left;
	short right;
} SpuVolume;

typedef struct SpuVoiceAttr {
	unsigned long voice;
	unsigned long mask;
	struct SpuVolume volume;
	struct SpuVolume volmode;
	struct SpuVolume volumex;
	unsigned short pitch;
	unsigned short note;
	unsigned short sample_note;
	short envx;
	unsigned long addr;
	unsigned long loop_addr;
	long a_mode;
	long s_mode;
	long r_mode;
	unsigned short ar;
	unsigned short dr;
	unsigned short sr;
	unsigned short rr;
	unsigned short sl;
	unsigned short adsr1;
	unsigned short adsr2;
} SpuVoiceAttr;

typedef struct SpuReverbAttr {
	unsigned long mask;
	long mode;
	struct SpuVolume depth;
	long delay;
	long feedback;
} SpuReverbAttr;

typedef struct SpuDecodedData {
	short cd_left[512];
	short cd_right[512];
	short voice1[512];
	short voice3[512];
} SpuDecodedData, SpuDecodeData;

typedef struct SpuExtAttr {
	struct SpuVolume volume;
	long reverb;
	long mix;
} SpuExtAttr;

typedef struct SpuCommonAttr {
	unsigned long mask;
	struct SpuVolume mvol;
	struct SpuVolume mvolmode;
	struct SpuVolume mvolx;
	struct SpuExtAttr cd;
	struct SpuExtAttr ext;
} SpuCommonAttr;

typedef struct SpuEnv {
	unsigned long mask;
	unsigned long queueing;
} SpuEnv;

typedef struct SpuStVoiceAttr {
	char status;
	char pad1;
	char pad2;
	char pad3;
	long last_size;
	unsigned long buf_addr;
	unsigned long data_addr;
} SpuStVoiceAttr;

typedef struct SpuStEnv {
	long size;
	long low_priority;
	struct SpuStVoiceAttr voice[24];
} SpuStEnv;

typedef struct VabHdr {
	long form;
	long ver;
	long id;
	unsigned long fsize;
	unsigned short reserved0;
	unsigned short ps;
	unsigned short ts;
	unsigned short vs;
	unsigned char mvol;
	unsigned char pan;
	unsigned char attr1;
	unsigned char attr2;
	unsigned long reserved1;
} VabHdr;

typedef struct ProgAtr {
	unsigned char tones;
	unsigned char mvol;
	unsigned char prior;
	unsigned char mode;
	unsigned char mpan;
	char reserved0;
	short attr;
	unsigned long reserved1;
	unsigned long reserved2;
} ProgAtr;

typedef struct VagAtr {
	unsigned char prior;
	unsigned char mode;
	unsigned char vol;
	unsigned char pan;
	unsigned char center;
	unsigned char shift;
	unsigned char min;
	unsigned char max;
	unsigned char vibW;
	unsigned char vibT;
	unsigned char porW;
	unsigned char porT;
	unsigned char pbmin;
	unsigned char pbmax;
	unsigned char reserved1;
	unsigned char reserved2;
	unsigned short adsr1;
	unsigned short adsr2;
	short prog;
	short vag;
	short reserved[4];
} VagAtr;

typedef struct SndVolume {
	unsigned short left;
	unsigned short right;
} SndVolume;

typedef struct SndVolume2 {
	short left;
	short right;
} SndVolume2;

typedef struct SndRegisterAttr {
	struct SndVolume2 volume;
	short pitch;
	short mask;
	short addr;
	short adsr1;
	short adsr2;
} SndRegisterAttr;

typedef struct SndVoiceStats {
	short vagId;
	short vabId;
	unsigned short pitch;
	short note;
	short tone;
	short prog_num;
	short prog_actual;
	short vol;
	short pan;
} SndVoiceStats;

typedef struct _SsFCALL {
	void* (*noteon)();
	void* (*programchange)();
	void* (*pitchbend)();
	void* (*metaevent)();
	void* (*control[13])();
	void* (*ccentry[20])();
} _SsFCALL;

typedef struct MissileStruct {
	long _mixvel;
	long _miyvel;
	long _mitxoff;
	long _mityoff;
	int _midam;
	int _mirnd;
	unsigned short _mirange;
	unsigned short _micaster;
	short _midist;
	short _miVar1;
	short _miVar2;
	short _miVar3;
	short _miVar4;
	short _miVar5;
	short _miVar6;
	short _miVar7;
	short _miVar8;
	short _misource;
	char _mitype;
	char _mix;
	char _miy;
	char _mixoff;
	char _miyoff;
	char _misx;
	char _misy;
	unsigned char _miAnimType;
	unsigned char _miDelFlag;
	unsigned char _miAnimFlags;
	unsigned char _miDrawFlag;
	unsigned char _miLightFlag;
	unsigned char _miPreFlag;
	unsigned char _miHitFlag;
	char _mlid;
	char _mimfnum;
	char _mispllvl;
	char _miAnimDelay;
	char _miAnimLen;
	char _miAnimWidth;
	char _miAnimWidth2;
	char _miAnimCnt;
	char _miAnimAdd;
	char _miAnimFrame;
	void* (*PrintPtr)();
} MissileStruct;

typedef struct SPELLFX_DAT {
	unknown apocactive;
	unknown healactive;
	int teleflag;
	int phaseflag;
	int inviscount;
	int X;
	int Y;
	int sxoff;
	int syoff;
	int scrnx;
	int scrny;
	int px;
	int py;
	int yoffset;
	int spiny1;
	int spiny2;
	int scale;
	int healtime;
} SPELLFX_DAT;

typedef struct Particle {
	int partx;
	int party;
	int partanim;
	int jumpflag;
	int jumpcount;
	int jumpmax;
	int dx;
	int scale;
	int colour;
} Particle;

typedef struct strheader {
	short id;
	short type;
	short seccount;
	short nsectors;
	int framecount;
	int framesize;
	short width;
	short height;
	int res[3];
} strheader;

typedef struct strsec {
	short id;
	short type;
	short seccount;
	short nsectors;
	int framecount;
	int framesize;
	short width;
	short height;
	int res[3];
	int data[504];
} strsec;

typedef struct mdc_header {
	char id[4];
	int frames;
	int framesize;
	int width;
	int height;
} mdc_header;

typedef struct file_header {
	char magic[2];
	char type;
	char blockentry;
	unsigned char title[64];
	char reserved[28];
	char clut[32];
	char icon[1][128];
	int chksum;
	int size;
	int id;
	char icon2[1][116];
	char icon3[1][128];
} file_header;

typedef struct FeTable {
	int Title;
	int Sel;
	int SelW;
	int SelH;
	void* (*InitFuncPtr)();
	void* (*CtrlFuncPtr)();
	void* PrevMenu;
} FeTable;

typedef struct FeStruct {
	int X;
	int Y;
	enum TXT_JUST Just;
	int Str;
	struct CFont* Font;
	struct FeTable* MenuPtr;
} FeStruct;

typedef struct FE_PLR {
	char Name[10];
	int Class;
} FE_PLR;

typedef struct FE_CREATE {
	int NumOfPlayers;
	struct FE_PLR Plrs[2];
} FE_CREATE;

typedef struct OrigPkItemStruct {
	int iSeed;
	unsigned short iCreateInfo;
	unsigned short idx;
	unsigned char bId;
	unsigned char bDur;
	unsigned char bMDur;
	unsigned char bCh;
	unsigned char bMCh;
	unsigned short wValue;
	unsigned long dwBuff;
} OrigPkItemStruct;

typedef struct PcPkItemStruct {
	unsigned char Shite[19];
} PcPkItemStruct;

typedef struct PcPkPlayerStruct {
	struct FILETIME archiveTime;
	unsigned char destAction;
	unsigned char destParam1;
	unsigned char destParam2;
	unsigned char plrlevel;
	unsigned char px;
	unsigned char py;
	char pName[32];
	unsigned char pClass;
	unsigned char pBaseStr;
	unsigned char pBaseMag;
	unsigned char pBaseDex;
	unsigned char pBaseVit;
	unsigned char pLevel;
	unsigned char pStatPts;
	int pExperience;
	int pGold;
	int pHPBase;
	int pMaxHPBase;
	int pManaBase;
	int pMaxManaBase;
	unsigned char pSplLvl[37];
	int pMemSpells;
	int pMemSpells2;
	struct PcPkItemStruct InvBody[7];
	struct PcPkItemStruct InvList[40];
	char InvGrid[40];
	unsigned char _pNumInv;
	struct PcPkItemStruct SpdList[8];
	unsigned char Pad[24];
	int pDiabloKillLevel;
	char DeadLevel;
} PcPkPlayerStruct;

typedef struct PkItemStruct {
	unsigned int dwBuff;
	int iSeed;
	unsigned int iCreateInfo;
	unsigned int idx;
	unsigned int wValue;
	unsigned int bId;
	unsigned int bDur;
	unsigned int bMDur;
	unsigned int bCh;
	unsigned int bMCh;
} PkItemStruct;

typedef struct PkPlayerStruct {
	struct PkItemStruct SpdList[8];
	struct PkItemStruct InvBody[7];
	struct PkItemStruct InvList[40];
	unsigned long pMemSpells;
	struct FILETIME archiveTime;
	long pExperience;
	long pHPBase;
	long pMaxHPBase;
	long pManaBase;
	long pMaxManaBase;
	int pRSpell;
	char pName[32];
	char InvGrid[40];
	unsigned char pSplLvl[37];
	unsigned char destAction;
	unsigned char destParam1;
	unsigned char destParam2;
	unsigned char plrlevel;
	unsigned char pClass;
	unsigned char pBaseStr;
	unsigned char pBaseMag;
	unsigned char pBaseDex;
	unsigned char pBaseVit;
	unsigned char pLevel;
	unsigned char pStatPts;
	char DeadLevel;
	unsigned char _pNumInv;
	char pRSplType;
} PkPlayerStruct;

typedef struct CharDataStructDef {
	struct PkPlayerStruct CharSlots[6];
	char ToggleSave[6];
	char spltypesave[6];
} CharDataStructDef;

typedef struct LOAD_IMAGE_ARGS {
	struct RECT Rect;
	unsigned int UseAddr;
	unsigned int DiscardAfterDump;
	unsigned int IsMove;
	int Offset;
	long ImgHandle;
	void* Addr;
	unsigned short DestX;
	unsigned short DestY;
} LOAD_IMAGE_ARGS;

typedef struct PRIM_BUFFER {
	struct POLY_FT4* Prims;
	struct POLY_FT4* EndAddr;
	unsigned long* OtList;
	unsigned char Drawing;
	int OtSize;
	long hndOtList;
	long hndPrims;
} PRIM_BUFFER;


typedef struct TPAGE_DEF {
	union {
		struct TP_LINK TpLink;
		struct DR_TPAGE DrTpage;
	} LPage;
	unsigned char TpageMode;
	unsigned char Offset;
	unsigned char Height;
	unsigned char Indent;
	unsigned char Width;
	unsigned char Num;
} TPAGE_DEF;

typedef struct MEM_INFO {
	void* Addr;
	unsigned long Size;
} MEM_INFO;

typedef struct LNK_OPTS {
	unsigned long RamSize;
	unsigned long StackSize;
	void* OrgAddress;
	void* FreeMemAddress;
	unsigned long FreeMemSize;
	enum FILE_SYSTEM FileSystem;
	enum DEV_KIT DevKit;
	unsigned long NoQuests;
} LNK_OPTS;

typedef struct DatIO {
	struct FileIO FileIO;
} DatIO;

typedef struct bank_entry {
	unsigned short Name;
	unsigned long offset;
	unsigned short len;
	unsigned short pitch;
} bank_entry;

typedef struct PanelXY {
	int MainX;
	int MainY;
	int FlaskFlip;
	int SpeedBarXOfs;
	int SpeedBarYOfs;
	int SpellXOfs;
	int SpellYOfs;
	int LevelUpXOfs;
	int LevelUpYOfs;
	int MsgX;
	int MsgY;
	int MsgW;
	int MsgH;
	int HeadDurX;
	int HeadDurY;
	int BodyDurX;
	int BodyDurY;
	int Hand0DurX;
	int Hand0DurY;
	int Hand1DurX;
	int Hand1DurY;
	unsigned char WhichPlayerDoesThisPanelReallyBelongToThen;
} PanelXY;

typedef struct GPanel {
	int HealthAnimCount;
	int ManaAnimCount;
	int GlobeAnimCount;
	struct RECT MsgRect;
	struct TextDat* PanelTData;
	int GPanelOt;
} GPanel;

typedef struct RgbTest {
	unsigned long Scale;
	unsigned long IR0;
	unsigned long IR1;
	unsigned long IR2;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char pad0;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char pad1;
	unsigned char res_r;
	unsigned char res_g;
	unsigned char res_b;
	unsigned char pad2;
} RgbTest;

typedef struct DPatsStruct {
	int qpat;
	int d1;
	int d2;
	int d3;
	int d4;
} DPatsStruct;

typedef struct NODE {
	int nHallx1;
	int nHally1;
	int nHallx2;
	int nHally2;
	int nHalldir;
	struct NODE* pNext;
} NODE, HALLNODE;

typedef struct ROOMNODE {
	int nRoomx1;
	int nRoomy1;
	int nRoomx2;
	int nRoomy2;
	int nRoomDest;
} ROOMNODE;

typedef struct STextStruct {
	char _sx;
	char _syoff;
	char _sstr[128];
	unsigned char _sjust;
	char _sclr;
	unsigned char _sline;
	unsigned char _ssel;
	int _sval;
} STextStruct;

typedef struct SNDPLAYOPTS {
	int patnum;
	char bhandle;
	char keynum;
	char velocity;
	char pan;
	char vol;
	char bend;
	char fxlevel0;
	char use3dpos;
	unsigned short azimuth;
	short elevation;
} SNDPLAYOPTS;

typedef struct SNDLIMITS {
	int dmabuflen;
	unsigned char numdmabufs;
	unsigned char numdmamsgs;
	unsigned char nummicrotalkinstances;
	unsigned char microtalkinstanceabort;
	short numrspcmds;
	short pad2;
	int audiostreambufsize;
} SNDLIMITS;

typedef struct SNDUSAGE {
	unsigned char numdmabufs;
	unsigned char numvoices;
	short numrspcmds;
	int heapused;
} SNDUSAGE;

typedef struct LightListStruct {
	char _lx;
	char _ly;
	unsigned short _lradius;
	char _lid;
	unsigned char _ldel;
	unsigned char _lunflag;
	char _lunx;
	char _luny;
	char _lunr;
	char _xoff;
	char _yoff;
	unsigned char _lflags;
} LightListStruct;

typedef struct LightListStruct2 {
	char _lx;
	char _ly;
	unsigned short _lradius;
	char _lid;
	unsigned char _ldel;
	char _xoff;
	char _yoff;
} LightListStruct2;

typedef struct TriggerStruct {
	int _tx;
	int _ty;
	unsigned int _tmsg;
	int _tlvl;
} TriggerStruct;

typedef struct BLOCK {
	unsigned char x;
	unsigned char y;
	unsigned short block;
} BLOCK;

typedef struct MEMSTRUCT {
	long Handle;
	void* MemPtr;
} MEMSTRUCT;

typedef struct TextDataStruct {
	int txtstr;
	unsigned char scrlltxt;
	unsigned char txtspd;
	int sfxnr;
} TextDataStruct;

typedef struct CPauseMessages {
	int PadNum;
	struct __vtbl_ptr_type* _vf[11];
} CPauseMessages;

typedef struct CTempPauseMessage {
	struct CPauseMessages CPauseMessages;
	struct TextDat* TData;
} CTempPauseMessage;

typedef struct FontItem {
	unsigned char ch;
	unsigned short Offset;
} FontItem;

typedef struct FontTab {
	struct CFont* Fnt;
	struct FontItem* Items;
	int NumOfItems;
	int FrameBase;
} FontTab;

typedef struct TNQ {
	unsigned char _qsttype;
	unsigned char _qstmsg;
	unsigned char _qstmsgact;
} TNQ;

typedef struct TownerStruct {
	int _tmode;
	int _ttype;
	int _tx;
	int _ty;
	long _txoff;
	long _tyoff;
	long _txvel;
	long _tyvel;
	int _tdir;
	int _tAnimDelay;
	int _tAnimCnt;
	int _tAnimLen;
	int _tAnimFrame;
	int _tAnimFrameCnt;
	char _tAnimOrder;
	long _tAnimWidth;
	long _tAnimWidth2;
	int _tTenPer;
	int _teflag;
	int _tbtcnt;
	unsigned char _tSelFlag;
	unsigned char _tMsgSaid;
	struct TNQ qsts[16];
	int _tSeed;
	long _tVar1;
	long _tVar2;
	long _tVar3;
	long _tVar4;
	int _tName;
	unsigned char* _tNAnim[8];
	int _tNFrames;
	unsigned char* _tNData;
} TownerStruct;

typedef struct QuestTalkData {
	int _qinfra;
	int _qblkm;
	int _qgarb;
	int _qzhar;
	int _qveil;
	int _qmod;
	int _qbutch;
	int _qbol;
	int _qblind;
	int _qblood;
	int _qanvil;
	int _qwarlrd;
	int _qking;
	int _qpw;
	int _qbone;
	int _qvb;
} QuestTalkData;

typedef struct DeadStruct {
	int _deadtype;
	int _deadFrame;
	char _deadtrans;
} DeadStruct;

typedef struct MStr {
	unsigned int Index;
	unsigned int MyMonst;
} MStr;

typedef struct IStr {
	unsigned int Index;
	unsigned int MyItem;
} IStr;

typedef struct MissStr {
	unsigned int Index;
	unsigned int MyMiss;
} MissStr;

typedef struct OStr {
	unsigned int Index;
	unsigned int MyObject;
} OStr;

typedef struct DStr {
	unsigned char Index;
	unsigned char x;
	unsigned char y;
} DStr;


typedef struct CacheInfo {
} CacheInfo;

typedef struct CachedInfoList {
	int NumOfItems;
	struct CacheInfo Items[1];
} CachedInfoList;

typedef struct TownToCreature {
	unsigned char GameEqu;
	unsigned char CreatureEquate;
} TownToCreature;

typedef struct DR_LOAD2 {
	unsigned int addr;
	unsigned int len;
	unsigned long code[1];
	struct RECT rect;
	unsigned long p[13];
} DR_LOAD2;

typedef struct Overlay {
	unsigned char* Addr;
	int Size;
	char* FileName;
	enum OVER_TYPE Over;
} Overlay;

typedef struct PlayerParam {
	struct CPlayer* ThePlayer;
	int Id;
} PlayerParam;

typedef struct TMenuItem {
	unsigned long dwFlags;
	int pszStr;
	void* (*fnMenu)();
} TMenuItem;

typedef struct SpellData {
	unsigned char sName;
	unsigned char sManaCost;
	unsigned char sType;
	int sNameText;
	int sSkillText;
	int sBookLvl;
	int sStaffLvl;
	unsigned char sTargeted;
	unsigned char sTownSpell;
	int sMinInt;
	unsigned char sSFX;
	unsigned char sMissiles[3];
	unsigned char sManaAdj;
	unsigned char sMinMana;
	int sStaffMin;
	int sStaffMax;
	int sBookCost;
	int sStaffCost;
} SpellData;

typedef struct GsCOORD2PARAM {
	struct VECTOR scale;
	struct SVECTOR rotate;
	struct VECTOR trans;
} GsCOORD2PARAM;

typedef struct _GsCOORDINATE2 {
	unsigned long flg;
	struct MATRIX coord;
	struct MATRIX workm;
	struct GsCOORD2PARAM* param;
	struct _GsCOORDINATE2* super;
	struct _GsCOORDINATE2* sub;
} _GsCOORDINATE2, GsCOORDINATE2;

typedef struct GsVIEW2 {
	struct MATRIX view;
	struct _GsCOORDINATE2* super;
} GsVIEW2;

typedef struct GsRVIEW2 {
	long vpx;
	long vpy;
	long vpz;
	long vrx;
	long vry;
	long vrz;
	long rz;
	struct _GsCOORDINATE2* super;
} GsRVIEW2;

typedef struct GsF_LIGHT {
	int vx;
	int vy;
	int vz;
	unsigned char r;
	unsigned char g;
	unsigned char b;
} GsF_LIGHT;

typedef struct GsOT_TAG {
	unsigned int p;
	unsigned char num;
} GsOT_TAG;

typedef struct GsOT {
	unsigned long length;
	struct GsOT_TAG* org;
	unsigned long offset;
	unsigned long point;
	struct GsOT_TAG* tag;
} GsOT;

typedef struct GsDOBJ2 {
	unsigned long attribute;
	struct _GsCOORDINATE2* coord2;
	unsigned long* tmd;
	unsigned long id;
} GsDOBJ2, GsDOBJ4;

typedef struct GsDOBJ3 {
	unsigned long attribute;
	struct _GsCOORDINATE2* coord2;
	unsigned long* pmd;
	unsigned long* base;
	unsigned long* sv;
	unsigned long id;
} GsDOBJ3;

typedef struct GsDOBJ5 {
	unsigned long attribute;
	struct _GsCOORDINATE2* coord2;
	unsigned long* tmd;
	unsigned long* packet;
	unsigned long id;
} GsDOBJ5;

typedef struct GsSPRITE {
	unsigned long attribute;
	short x;
	short y;
	unsigned short w;
	unsigned short h;
	unsigned short tpage;
	unsigned char u;
	unsigned char v;
	short cx;
	short cy;
	unsigned char r;
	unsigned char g;
	unsigned char b;
	short mx;
	short my;
	short scalex;
	short scaley;
	long rotate;
} GsSPRITE;

typedef struct GsSPARRAY {
	unsigned long attribute;
	short x;
	short y;
	struct DR_MODE mode[2];
	struct SPRT packet[2];
} GsSPARRAY;

typedef struct GsCELL {
	unsigned char u;
	unsigned char v;
	unsigned short cba;
	unsigned short flag;
	unsigned short tpage;
} GsCELL;

typedef struct GsMAP {
	unsigned char cellw;
	unsigned char cellh;
	unsigned short ncellw;
	unsigned short ncellh;
	struct GsCELL* base;
	unsigned short* index;
} GsMAP;

typedef struct GsBG {
	unsigned long attribute;
	short x;
	short y;
	short w;
	short h;
	short scrollx;
	short scrolly;
	unsigned char r;
	unsigned char g;
	unsigned char b;
	struct GsMAP* map;
	short mx;
	short my;
	short scalex;
	short scaley;
	long rotate;
} GsBG;

typedef struct GsLINE {
	unsigned long attribute;
	short x0;
	short y0;
	short x1;
	short y1;
	unsigned char r;
	unsigned char g;
	unsigned char b;
} GsLINE;

typedef struct GsGLINE {
	unsigned long attribute;
	short x0;
	short y0;
	short x1;
	short y1;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
} GsGLINE;

typedef struct GsBOXF {
	unsigned long attribute;
	short x;
	short y;
	unsigned short w;
	unsigned short h;
	unsigned char r;
	unsigned char g;
	unsigned char b;
} GsBOXF;

typedef struct GsFOGPARAM {
	short dqa;
	long dqb;
	unsigned char rfc;
	unsigned char gfc;
	unsigned char bfc;
} GsFOGPARAM;

typedef struct GsIMAGE {
	unsigned long pmode;
	short px;
	short py;
	unsigned short pw;
	unsigned short ph;
	unsigned long* pixel;
	short cx;
	short cy;
	unsigned short cw;
	unsigned short ch;
	unsigned long* clut;
} GsIMAGE;

typedef struct _GsPOSITION {
	short offx;
	short offy;
} _GsPOSITION;

typedef struct GsOBJTABLE2 {
	struct GsDOBJ2* top;
	int nobj;
	int maxobj;
} GsOBJTABLE2;

typedef struct _GsFCALL {
	unsigned char* (**f3[2][3])();
	unsigned char* (**nf3[2])();
	unsigned char* (**g3[2][3])();
	unsigned char* (**ng3[2])();
	unsigned char* (**tf3[2][3])();
	unsigned char* (**ntf3[2])();
	unsigned char* (**tg3[2][3])();
	unsigned char* (**ntg3[2])();
	unsigned char* (**f4[2][3])();
	unsigned char* (**nf4[2])();
	unsigned char* (**g4[2][3])();
	unsigned char* (**ng4[2])();
	unsigned char* (**tf4[2][3])();
	unsigned char* (**ntf4[2])();
	unsigned char* (**tg4[2][3])();
	unsigned char* (**ntg4[2])();
	unsigned char* (**f3g[3])();
	unsigned char* (**g3g[3])();
	unsigned char* (**f4g[3])();
	unsigned char* (**g4g[3])();
} _GsFCALL;

typedef struct TMD_P_F3 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned short n0;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
} TMD_P_F3;

typedef struct TMD_P_G3 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned short n0;
	unsigned short v0;
	unsigned short n1;
	unsigned short v1;
	unsigned short n2;
	unsigned short v2;
} TMD_P_G3;

typedef struct TMD_P_F3G {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char dummy1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char dummy2;
	unsigned short n0;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
} TMD_P_F3G;

typedef struct TMD_P_G3G {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char dummy1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char dummy2;
	unsigned short n0;
	unsigned short v0;
	unsigned short n1;
	unsigned short v1;
	unsigned short n2;
	unsigned short v2;
} TMD_P_G3G;

typedef struct TMD_P_NF3 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short p;
} TMD_P_NF3;

typedef struct TMD_P_NG3 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p2;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short p;
} TMD_P_NG3;

typedef struct TMD_P_F4 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned short n0;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short v3;
	unsigned short p;
} TMD_P_F4;

typedef struct TMD_P_G4 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned short n0;
	unsigned short v0;
	unsigned short n1;
	unsigned short v1;
	unsigned short n2;
	unsigned short v2;
	unsigned short n3;
	unsigned short v3;
} TMD_P_G4;

typedef struct TMD_P_F4G {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char dummy1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char dummy2;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char dummy3;
	unsigned short n0;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short v3;
	unsigned short dummy4;
} TMD_P_F4G;

typedef struct TMD_P_G4G {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char dummy1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char dummy2;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char dummy3;
	unsigned short n0;
	unsigned short v0;
	unsigned short n1;
	unsigned short v1;
	unsigned short n2;
	unsigned short v2;
	unsigned short n3;
	unsigned short v3;
} TMD_P_G4G;

typedef struct TMD_P_NF4 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short v3;
} TMD_P_NF4;

typedef struct TMD_P_NG4 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char code;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p1;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p2;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char p3;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short v3;
} TMD_P_NG4;

typedef struct TMD_P_TF3 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char tu0;
	unsigned char tv0;
	unsigned short clut;
	unsigned char tu1;
	unsigned char tv1;
	unsigned short tpage;
	unsigned char tu2;
	unsigned char tv2;
	unsigned short p;
	unsigned short n0;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
} TMD_P_TF3;

typedef struct TMD_P_TG3 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char tu0;
	unsigned char tv0;
	unsigned short clut;
	unsigned char tu1;
	unsigned char tv1;
	unsigned short tpage;
	unsigned char tu2;
	unsigned char tv2;
	unsigned short p;
	unsigned short n0;
	unsigned short v0;
	unsigned short n1;
	unsigned short v1;
	unsigned short n2;
	unsigned short v2;
} TMD_P_TG3;

typedef struct TMD_P_TNF3 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char tu0;
	unsigned char tv0;
	unsigned short clut;
	unsigned char tu1;
	unsigned char tv1;
	unsigned short tpage;
	unsigned char tu2;
	unsigned char tv2;
	unsigned short p0;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char p1;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short p2;
} TMD_P_TNF3;

typedef struct TMD_P_TNG3 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char tu0;
	unsigned char tv0;
	unsigned short clut;
	unsigned char tu1;
	unsigned char tv1;
	unsigned short tpage;
	unsigned char tu2;
	unsigned char tv2;
	unsigned short p0;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char p1;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p2;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p3;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short p4;
} TMD_P_TNG3;

typedef struct TMD_P_TF4 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char tu0;
	unsigned char tv0;
	unsigned short clut;
	unsigned char tu1;
	unsigned char tv1;
	unsigned short tpage;
	unsigned char tu2;
	unsigned char tv2;
	unsigned short p0;
	unsigned char tu3;
	unsigned char tv3;
	unsigned short p1;
	unsigned short n0;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short v3;
	unsigned short p2;
} TMD_P_TF4;

typedef struct TMD_P_TG4 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char tu0;
	unsigned char tv0;
	unsigned short clut;
	unsigned char tu1;
	unsigned char tv1;
	unsigned short tpage;
	unsigned char tu2;
	unsigned char tv2;
	unsigned short p0;
	unsigned char tu3;
	unsigned char tv3;
	unsigned short p1;
	unsigned short n0;
	unsigned short v0;
	unsigned short n1;
	unsigned short v1;
	unsigned short n2;
	unsigned short v2;
	unsigned short n3;
	unsigned short v3;
} TMD_P_TG4;

typedef struct TMD_P_TNF4 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char tu0;
	unsigned char tv0;
	unsigned short clut;
	unsigned char tu1;
	unsigned char tv1;
	unsigned short tpage;
	unsigned char tu2;
	unsigned char tv2;
	unsigned short p0;
	unsigned char tu3;
	unsigned char tv3;
	unsigned short p1;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char p2;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short v3;
} TMD_P_TNF4;

typedef struct TMD_P_TNG4 {
	unsigned char out;
	unsigned char in;
	unsigned char dummy;
	unsigned char cd;
	unsigned char tu0;
	unsigned char tv0;
	unsigned short clut;
	unsigned char tu1;
	unsigned char tv1;
	unsigned short tpage;
	unsigned char tu2;
	unsigned char tv2;
	unsigned short p0;
	unsigned char tu3;
	unsigned char tv3;
	unsigned short p1;
	unsigned char r0;
	unsigned char g0;
	unsigned char b0;
	unsigned char p2;
	unsigned char r1;
	unsigned char g1;
	unsigned char b1;
	unsigned char p3;
	unsigned char r2;
	unsigned char g2;
	unsigned char b2;
	unsigned char p4;
	unsigned char r3;
	unsigned char g3;
	unsigned char b3;
	unsigned char p5;
	unsigned short v0;
	unsigned short v1;
	unsigned short v2;
	unsigned short v3;
} TMD_P_TNG4;

typedef struct TMD_STRUCT {
	unsigned long* vertop;
	unsigned long vern;
	unsigned long* nortop;
	unsigned long norn;
	unsigned long* primtop;
	unsigned long primn;
	unsigned long scale;
} TMD_STRUCT;

typedef struct VERT {
	short vx;
	short vy;
	short vz;
	unsigned char tu;
	unsigned char tv;
} VERT;

typedef struct VERTC {
	short vx;
	short vy;
	short vz;
	unsigned char tu;
	unsigned char tv;
	struct CVECTOR col;
} VERTC;

typedef struct GsADIV_FT4 {
	unsigned long limit;
	long hwd;
	long vwd;
	int shift;
	unsigned long* org;
	unsigned long* pk;
	long otz;
	long adivz;
	short adivw;
	short adivh;
	long flg0;
	long flg;
	short minx;
	short miny;
	short maxx;
	short maxy;
	short hwd0;
	short vwd0;
	unsigned long* tag;
	struct POLY_FT4 si;
} GsADIV_FT4;

typedef struct GsADIV_P_FT4 {
	struct VERT vt[4];
} GsADIV_P_FT4, GsADIV_P_F4;

typedef struct GsADIV_GT4 {
	unsigned long limit;
	long hwd;
	long vwd;
	int shift;
	unsigned long* org;
	unsigned long* pk;
	long otz;
	long adivz;
	short adivw;
	short adivh;
	long flg0;
	long flg;
	short minx;
	short miny;
	short maxx;
	short maxy;
	short hwd0;
	short vwd0;
	unsigned long* tag;
	struct POLY_GT4 si;
} GsADIV_GT4;

typedef struct GsADIV_P_GT4 {
	struct VERTC vt[4];
} GsADIV_P_GT4, GsADIV_P_G4;

typedef struct GsADIV_G4 {
	unsigned long limit;
	long hwd;
	long vwd;
	int shift;
	unsigned long* org;
	unsigned long* pk;
	long otz;
	long adivz;
	short adivw;
	short adivh;
	long flg0;
	long flg;
	short minx;
	short miny;
	short maxx;
	short maxy;
	short hwd0;
	short vwd0;
	unsigned long* tag;
	struct POLY_G4 si;
} GsADIV_G4;

typedef struct GsADIV_F4 {
	unsigned long limit;
	long hwd;
	long vwd;
	int shift;
	unsigned long* org;
	unsigned long* pk;
	long otz;
	long adivz;
	short adivw;
	short adivh;
	long flg0;
	long flg;
	short minx;
	short miny;
	short maxx;
	short maxy;
	short hwd0;
	short vwd0;
	unsigned long* tag;
	struct POLY_F4 si;
} GsADIV_F4;

typedef struct GsADIV_FT3 {
	unsigned long limit;
	long hwd;
	long vwd;
	int shift;
	unsigned long* org;
	unsigned long* pk;
	long otz;
	long adivz;
	short adivw;
	short adivh;
	long flg;
	short minx;
	short miny;
	short maxx;
	short maxy;
	short hwd0;
	short vwd0;
	unsigned long* tag;
	struct POLY_FT3 si;
} GsADIV_FT3;

typedef struct GsADIV_P_FT3 {
	struct VERT vt[3];
} GsADIV_P_FT3, GsADIV_P_F3;

typedef struct GsADIV_GT3 {
	unsigned long limit;
	long hwd;
	long vwd;
	int shift;
	unsigned long* org;
	unsigned long* pk;
	long otz;
	long adivz;
	short adivw;
	short adivh;
	long flg;
	short minx;
	short miny;
	short maxx;
	short maxy;
	short hwd0;
	short vwd0;
	unsigned long* tag;
	struct POLY_GT3 si;
} GsADIV_GT3;

typedef struct GsADIV_P_GT3 {
	struct VERTC vt[3];
} GsADIV_P_GT3, GsADIV_P_G3;

typedef struct GsADIV_G3 {
	unsigned long limit;
	long hwd;
	long vwd;
	int shift;
	unsigned long* org;
	unsigned long* pk;
	long otz;
	long adivz;
	short adivw;
	short adivh;
	long flg;
	short minx;
	short miny;
	short maxx;
	short maxy;
	short hwd0;
	short vwd0;
	unsigned long* tag;
	struct POLY_G3 si;
} GsADIV_G3;

typedef struct GsADIV_F3 {
	unsigned long limit;
	long hwd;
	long vwd;
	int shift;
	unsigned long* org;
	unsigned long* pk;
	long otz;
	long adivz;
	short adivw;
	short adivh;
	long flg;
	short minx;
	short miny;
	short maxx;
	short maxy;
	short hwd0;
	short vwd0;
	unsigned long* tag;
	struct POLY_F3 si;
} GsADIV_F3;

typedef struct _GsCOORDUNIT {
	unsigned long flg;
	struct MATRIX matrix;
	struct MATRIX workm;
	struct SVECTOR rot;
	struct _GsCOORDUNIT* super;
} _GsCOORDUNIT, GsCOORDUNIT;

typedef struct GsVIEWUNIT {
	struct MATRIX view;
	struct _GsCOORDUNIT* super;
} GsVIEWUNIT;

typedef struct GsRVIEWUNIT {
	long vpx;
	long vpy;
	long vpz;
	long vrx;
	long vry;
	long vrz;
	long rz;
	struct _GsCOORDUNIT* super;
} GsRVIEWUNIT;

typedef struct GsUNIT {
	struct _GsCOORDUNIT* coord;
	unsigned long* primtop;
} GsUNIT;

typedef struct GsTYPEUNIT {
	unsigned long type;
	unsigned long* ptr;
} GsTYPEUNIT;

typedef struct GsARGUNIT {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
} GsARGUNIT;

typedef struct GsWORKUNIT {
	struct DVECTOR vec;
	short otz;
	short p;
} GsWORKUNIT;

typedef struct GsARGUNIT_NORMAL {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	unsigned long* primtop;
	struct SVECTOR* vertop;
	struct SVECTOR* nortop;
} GsARGUNIT_NORMAL;

typedef struct GsARGUNIT_SHARED {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	unsigned long* primtop;
	struct SVECTOR* vertop;
	struct GsWORKUNIT* vertop2;
	struct SVECTOR* nortop;
	struct SVECTOR* nortop2;
} GsARGUNIT_SHARED;

typedef struct GsARGUNIT_IMAGE {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	unsigned long* imagetop;
	unsigned long* cluttop;
} GsARGUNIT_IMAGE;

typedef struct GsARGUNIT_GND {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	unsigned long* polytop;
	unsigned long* boxtop;
	unsigned long* pointtop;
	struct SVECTOR* nortop;
} GsARGUNIT_GND;

typedef struct GsARGUNIT_GNDT {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	unsigned long* polytop;
	unsigned long* boxtop;
	unsigned long* pointtop;
	struct SVECTOR* nortop;
	unsigned long* uvtop;
} GsARGUNIT_GNDT;

typedef struct GsARGUNIT_JntMIMe {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	unsigned long* coord_sect;
	long* mimepr;
	unsigned long mimenum;
	unsigned short mimeid;
	unsigned short reserved;
	unsigned long* mime_diff_sect;
} GsARGUNIT_JntMIMe;

typedef struct GsARGUNIT_RstJntMIMe {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	unsigned long* coord_sect;
	unsigned short mimeid;
	unsigned short reserved;
	unsigned long* mime_diff_sect;
} GsARGUNIT_RstJntMIMe;

typedef struct GsARGUNIT_VNMIMe {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	long* mimepr;
	unsigned long mimenum;
	unsigned short mimeid;
	unsigned short reserved;
	unsigned long* mime_diff_sect;
	struct SVECTOR* orgs_vn_sect;
	struct SVECTOR* vert_sect;
	struct SVECTOR* norm_sect;
} GsARGUNIT_VNMIMe;

typedef struct GsARGUNIT_RstVNMIMe {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	unsigned short mimeid;
	unsigned short reserved;
	unsigned long* mime_diff_sect;
	struct SVECTOR* orgs_vn_sect;
	struct SVECTOR* vert_sect;
	struct SVECTOR* norm_sect;
} GsARGUNIT_RstVNMIMe;

typedef struct GsARGUNIT_ANIM {
	unsigned long* primp;
	struct GsOT* tagp;
	int shift;
	int offset;
	unsigned char* out_packetp;
	long header_size;
	unsigned long* htop;
	unsigned long* ctop;
	unsigned long* ptop;
} GsARGUNIT_ANIM;

typedef struct GsSEH {
	short idx;
	unsigned char sid;
	unsigned char pad;
} GsSEH;

typedef struct GsSEQ {
	unsigned long rewrite_idx;
	unsigned short size;
	unsigned short num;
	unsigned short ii;
	unsigned short aframe;
	unsigned char sid;
	char speed;
	unsigned short srcii;
	short rframe;
	unsigned short tframe;
	unsigned short ci;
	unsigned short ti;
	unsigned short start;
	unsigned char start_sid;
	unsigned char traveling;
} GsSEQ;

typedef struct InitPos {
	unsigned short x;
	unsigned short y;
} InitPos;

typedef struct PalEntry {
	struct t11TLinkedList1Z8PalEntry t11TLinkedList1Z8PalEntry;
	unsigned short PixVal;
	unsigned short MyX;
	unsigned short MyY;
	unsigned short Clut;
	unsigned short SourceClut;
	unsigned short NumOfCols;
	unsigned short JustUsed;
} PalEntry;

typedef struct t10Collection2Z8PalEntryi20 {
	int ObjsUsed;
	struct PalEntry Objects[20];
	struct PalEntry* Used;
	struct PalEntry* Unused;
} t10Collection2Z8PalEntryi20;

typedef struct PalCollection {
	struct t10Collection2Z8PalEntryi20 t10Collection2Z8PalEntryi20;
} PalCollection;

typedef struct BIRDSTRUCT {
	struct BIRDSTRUCT* leader;
	short WorldX;
	short WorldY;
	char _bx;
	char _by;
	char _bxoff;
	char _byoff;
	char dir;
	char newdir;
	char rnddir;
	char flytime;
	char flyvar;
	char animcount;
	char mode;
	char height;
	unsigned char leadflag;
	unsigned char visible;
} BIRDSTRUCT, Bird;

typedef struct Perch {
	char x;
	char y;
} Perch;

typedef struct PInf {
	char* Tx;
	unsigned short GameTex;
	unsigned short TownTex;
	unsigned short TwoPlayerTex;
} PInf;

typedef struct bird {
	int townbirddir;
	int townx;
	int towny;
	int motionx;
	int motiony;
	int offx;
	int offy;
	int velx;
	int vely;
	int newvelx;
	int newvely;
	char sw;
	char fl;
	char fl_delay;
	char sw_delay;
	char perch;
	char bird_vis;
} bird;

typedef struct _HSCODESTREAM {
	int unused;
} _HSCODESTREAM;

typedef struct _SCODEEXECUTEDATA {
	unsigned long size;
	unsigned long flags;
	int xiterations;
	int yiterations;
	int adjustdest;
	int adjustsource;
	void* dest;
	void* source;
	void* table;
	unsigned long a;
	unsigned long b;
	unsigned long c;
	int adjustdestalt;
	int adjustsourcealt;
	unsigned long reserved[2];
} _SCODEEXECUTEDATA, SCODEEXECUTEDATA;

typedef struct _HSARCHIVE {
	int unused;
} _HSARCHIVE;

typedef struct _HSFILE {
	int unused;
} _HSFILE;

typedef struct _HSFINDFILE {
	int unused;
} _HSFINDFILE;

typedef struct _HSGDIOBJ {
	int unused;
} _HSGDIOBJ;

typedef struct _HSGDIFONT {
	struct _HSGDIOBJ _HSGDIOBJ;
	int unused;
} _HSGDIFONT;

typedef struct _PARAMS {
	unsigned long window;
	unsigned int message;
	long wparam;
	unsigned long lparam;
	unsigned int notifycode;
	void* extra;
	unsigned char useresult;
	unsigned long result;
} _PARAMS, PARAMS;

typedef struct _SNETCAPS {
	unsigned long size;
	unsigned long flags;
	unsigned long maxmessagesize;
	unsigned long maxqueuesize;
	unsigned long maxplayers;
	unsigned long bytessec;
	unsigned long latencyms;
	unsigned long defaultturnssec;
	unsigned long defaultturnsintransit;
} _SNETCAPS, SNETCAPS;

typedef struct _SNETCREATEDATA {
	unsigned long size;
	unsigned long providerid;
	unsigned long maxplayers;
	unsigned long createflags;
} _SNETCREATEDATA, SNETCREATEDATA;

typedef struct _SNET_DATA_SYSCOLORTABLE {
	unsigned long syscolor;
	unsigned long rgb;
} _SNET_DATA_SYSCOLORTABLE, SNET_DATA_SYSCOLORTABLE;

typedef struct _SNETEVENT {
	unsigned long eventid;
	unsigned long playerid;
	void* data;
	unsigned long databytes;
} _SNETEVENT, SNETEVENT;

typedef struct _SNETPLAYERDATA {
	unsigned long size;
	char* playername;
	char* playerdescription;
} _SNETPLAYERDATA, SNETPLAYERDATA;

typedef struct _SNETPROGRAMDATA {
	unsigned long size;
	char* programname;
	char* programdescription;
	unsigned long programid;
	unsigned long versionid;
	unsigned long reserved1;
	unsigned long maxplayers;
	void* initdata;
	unsigned long initdatabytes;
	void* reserved2;
	unsigned long optcategorybits;
} _SNETPROGRAMDATA, SNETPROGRAMDATA;

typedef struct _SNETUIDATA {
	unsigned long size;
	unsigned long uiflags;
	unsigned long parentwindow;
	unsigned char* (*artcallback)();
	unsigned char* (*authcallback)();
	unsigned char* (*createcallback)();
	unsigned char* (*drawdesccallback)();
	unsigned char* (*selectedcallback)();
	int* (*messageboxcallback)();
	unsigned char* (*soundcallback)();
	unsigned char* (*statuscallback)();
	unsigned char* (*getdatacallback)();
	unsigned char* (*categorycallback)();
} _SNETUIDATA, SNETUIDATA;

typedef struct _SNETVERSIONDATA {
	unsigned long size;
	char* versionstring;
	char* executablefile;
	char* originalarchivefile;
	char* patcharchivefile;
} _SNETVERSIONDATA, SNETVERSIONDATA;

typedef struct _SNETADDR {
	unsigned char address[16];
} _SNETADDR, SNETADDR;

typedef struct _SNETSPI_DEVICELIST {
	unsigned long deviceid;
	struct _SNETCAPS devicecaps;
	char devicename[128];
	char devicedescription[128];
	unsigned long reserved;
	struct _SNETSPI_DEVICELIST* next;
} _SNETSPI_DEVICELIST, SNETSPI_DEVICELIST;

typedef struct _SNETSPI_GAMELIST {
	unsigned long gameid;
	unsigned long gamemode;
	unsigned long creationtime;
	struct _SNETADDR owner;
	unsigned long ownerlatency;
	unsigned long ownerlasttime;
	unsigned long gamecategorybits;
	char gamename[128];
	char gamedescription[128];
	struct _SNETSPI_GAMELIST* next;
} _SNETSPI_GAMELIST, SNETSPI_GAMELIST;

typedef struct _SNETSPI {
	unsigned long size;
	unsigned char* (*CompareNetAddresses)();
	unsigned char* (*Destroy)();
	unsigned char* (*Free)();
	unsigned char* (*FreeExternalMessage)();
	unsigned char* (*GetGameInfo)();
	unsigned char* (*GetPerformanceData)();
	unsigned char* (*Initialize)();
	unsigned char* (*InitializeDevice)();
	unsigned char* (*LockDeviceList)();
	unsigned char* (*LockGameList)();
	unsigned char* (*Receive)();
	unsigned char* (*ReceiveExternalMessage)();
	unsigned char* (*SelectGame)();
	unsigned char* (*Send)();
	unsigned char* (*SendExternalMessage)();
	unsigned char* (*StartAdvertisingGame)();
	unsigned char* (*StopAdvertisingGame)();
	unsigned char* (*UnlockDeviceList)();
	unsigned char* (*UnlockGameList)();
} _SNETSPI, SNETSPI;

typedef struct _HSVIDEO {
	int unused;
} _HSVIDEO;

typedef struct _SVIDPALETTEUSE {
	unsigned long size;
	unsigned long firstentry;
	unsigned long numentries;
} _SVIDPALETTEUSE, SVIDPALETTEUSE;

typedef struct CCritSect {
	unsigned long m_critsect;
} CCritSect;

typedef struct CLock {
	unsigned long m_mutexevent;
	unsigned long m_readerevent;
	long m_readercount;
} CLock;

typedef struct _gamedata {
	unsigned long dwSeed;
	unsigned char bDiff;
} TGAMEDATA, _gamedata;

typedef struct _uidefaultstats {
	unsigned short strength;
	unsigned short magic;
	unsigned short dexterity;
	unsigned short vitality;
} _uidefaultstats, TUIDEFSTATS;

typedef struct _uiheroinfo {
	struct _uiheroinfo* next;
	char name[16];
	unsigned short level;
	unsigned char heroclass;
	unsigned char herorank;
	unsigned short strength;
	unsigned short magic;
	unsigned short dexterity;
	unsigned short vitality;
	unsigned long gold;
	unsigned char hassaved;
	unsigned char spawned;
} TUIHEROINFO, _uiheroinfo;

typedef struct _modeminfo {
	struct _modeminfo* next;
	unsigned long deviceid;
	char devicename[128];
	char devicedesc[128];
} TMODEM, _modeminfo;

typedef struct HelpStruct {
	char DisplayType;
	int HelpTxt;
	int subtxt;
} HelpStruct;

typedef struct OMENUITEM {
	unsigned char y;
	int Text;
	enum TXT_JUST Just;
	int len;
	unsigned long* var;
	int Link;
} OMENUITEM;

typedef struct OMENULIST {
	unsigned short w;
	unsigned char h;
	unsigned char NoEntries;
	struct OMENUITEM* Item;
} OMENULIST;

typedef struct FMVDAT {
	char* Name;
	unsigned short Width;
	unsigned short Height;
} FMVDAT;

typedef struct vbuffS {
	short kan;
	unsigned char count;
} vbuffS;

typedef struct block {
	int data[128];
	unsigned char blockrep;
	int blocksize;
	int blockoffset;
	unsigned char* Dest;
	int outsize;
} block;

typedef struct FeMenuTable {
	int X;
	int Y;
	enum TXT_JUST Just;
	unsigned short Str;
	struct FeTable* MenuPtr;
	struct CFont* Font;
} FeMenuTable;

typedef struct Creds {
	int Title;
	int SubTitle;
	int Text;
} Creds;

typedef struct sjis {
	char ascii;
	unsigned char num;
	unsigned short sjis;
} sjis;

typedef struct _mdecanim {
	char* filename;
	int speed;
	int start;
	int end;
	int streaming;
} _mdecanim, mdecanim;

typedef struct asec {
	int id;
	int size;
} asec;

typedef struct CSDATA {
	int x;
	int y;
	int w;
	int Text1;
	int Text2;
	int Text3;
	char String[15];
	char col;
} CSDATA;

typedef struct MissileData {
	unsigned char mName;
	void* (*mAddProc)();
	void* (*mProc)();
	unsigned char mDraw;
	unsigned char mType;
	unsigned char mResist;
	unsigned char mFileNum;
	int mlSFX;
	int miSFX;
} MissileData;

typedef struct MisFileData {
	unsigned char mAnimName;
	unsigned char mAnimFAmt;
	unsigned char mFlags;
	unsigned char mAnimDelay;
	unsigned char mAnimLen;
} MisFileData;

typedef struct ThemeStruct {
	char ttype;
	int ttval;
} ThemeStruct;

typedef struct _FILEHEADER {
	unsigned long signature;
	unsigned long headersize;
	unsigned long filesize;
	unsigned short version;
	unsigned short sectorsizeid;
	unsigned long hashoffset;
	unsigned long blockoffset;
	unsigned long hashcount;
	unsigned long blockcount;
} _FILEHEADER, FILEHEADER;

typedef struct _HASHENTRY {
	unsigned long hashcheck[2];
	unsigned long lcid;
	unsigned long block;
} _HASHENTRY, HASHENTRY;

typedef struct _BLOCKENTRY {
	unsigned long offset;
	unsigned long sizealloc;
	unsigned long sizefile;
	unsigned long flags;
} _BLOCKENTRY, BLOCKENTRY;

typedef struct _SHAREDDATA {
	long status;
	unsigned long processid;
} _SHAREDDATA, SHAREDDATA;

typedef struct CompClass {
	struct __vtbl_ptr_type* _vf[3];
} CompClass;

typedef struct CompressedLevs {
	unsigned long Version;
	unsigned long Offset[22];
	unsigned long Size[22];
} CompressedLevs;

typedef struct AMap {
	unknown Compressed;
	long hnd;
	int Size;
	struct DLevel* CurrLevel;
} AMap;

typedef struct CompLevelMaps {
	struct CompClass* CompObj;
	struct AMap TheMaps[22];
	int LastNumOut;
	struct DLevel* LastMapOut;
	unknown MapOut;
} CompLevelMaps;

typedef struct NoComp {
	struct CompClass CompClass;
} NoComp;

typedef struct PakComp {
	struct CompClass CompClass;
} PakComp;

typedef struct CrunchComp {
	struct CompClass CompClass;
} CrunchComp;

typedef struct TMegaPkt {
	struct TMegaPkt* pNext;
	unsigned long dwSpaceLeft;
	unsigned char data[32000];
} TMegaPkt;

typedef struct TBuffer {
	unsigned long dwNextWriteOffset;
	unsigned char bData[4096];
} TBuffer;

typedef struct tagPATHNODE {
	char f;
	char h;
	char g;
	int x;
	int y;
	struct tagPATHNODE* Parent;
	struct tagPATHNODE* Child[8];
	struct tagPATHNODE* NextNode;
} tagPATHNODE, PATHNODE;

typedef struct MESSAGE_STR {
	int Msg;
	char* Text;
} MESSAGE_STR;

typedef struct CINDER {
	unsigned short x;
	unsigned short y;
	unsigned short yinc;
} CINDER;

typedef struct DoorOff {
	char x;
	char y;
	char ot;
	char pad;
} DoorOff;

typedef struct MONTH_DAYS {
	char* Month;
	int Days;
} MONTH_DAYS;

typedef struct InvXY {
	int X;
	int Y;
} InvXY;

typedef struct MEM_HDR {
	struct MEM_HDR* Prev;
	struct MEM_HDR* Next;
	void* Mem;
	unsigned long Size;
	unsigned short TimeStamp;
	unsigned short Type;
	unsigned short Owners;
	unsigned short Handle;
	unsigned char Name[4];
} MEM_HDR;

typedef struct MEM_REG {
	void* Mem;
	int Size;
} MEM_REG;

typedef struct FILE {
	int _cnt;
	char* _ptr;
	char* _base;
	int _bufsiz;
	int _flag;
	int _file;
	char* _name_to_remove;
} FILE;

typedef struct TCBH {
	struct TCB* entry;
	long flag;
} TCBH;

typedef struct MEM_INIT_INFO {
	void* Mem;
	unsigned long Size;
	unsigned long Type;
	char* TypeString;
	unsigned short Alignment;
	void* (*MemMove)();
	struct MEM_INIT_INFO* NextInitBlock;
	unsigned short Flags;
	struct MEM_HDR* Empty;
	struct MEM_HDR* Used;
} MEM_INIT_INFO;

typedef struct OBJ_LIST {
	unsigned long PrintDepth;
	unsigned char Visible;
	unsigned char Killable;
	char* ListName;
	struct OBJ_LIST* Prev;
	struct OBJ_LIST* Next;
	long X;
	long Y;
	long Z;
	struct OBJ_STRUCT* Head;
	unsigned char* (*SortCompare)();
} OBJ_LIST;

